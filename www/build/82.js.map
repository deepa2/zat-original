{"version":3,"sources":["../../src/container/switch-user/switch-user.module.ts","../../src/container/switch-user/switch-user.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACD;AAU/C;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QARhC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,oEAAc,CAAC;aACzC;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACe;AACA;AACR;AACwB;AACO;AAEhF;;;;;GAKG;AAOH;IAGE,wBAAmB,OAAsB,EAAS,SAAoB,EAAU,YAA0B,EAAU,IAAU,EAAU,MAAoB,EAAS,OAAuB;QAAzK,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,SAAI,GAAJ,IAAI,CAAM;QAAU,WAAM,GAAN,MAAM,CAAc;QAAS,YAAO,GAAP,OAAO,CAAgB;QAFpL,WAAM,GAAe,EAAE;IAG/B,CAAC;IAED,uCAAc,GAAd;QAAA,iBAsBC;QArBC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,QAAY;YAClD,IAAG,QAAQ,EAAC;gBAEV,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAEhC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;oBAE3J,IAAI,QAAQ,EAAE;wBACZ,IAAI,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC5C,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC;4BAE5C,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;yBAClC;qBACF;gBACH,CAAC,EAAC,aAAG;oBACH,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBACnC,CAAC,CAAC;aACH;QAEH,CAAC,CAAC;IAEJ,CAAC;IAED,iCAAQ,GAAR,UAAS,QAAQ;QACf,IAAI,gBAAgB,CAAC;QAErB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,WAAW,EAAE;YACzC,gBAAgB,GAAG,KAAK;SACzB;aAAM;YACL,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC3C;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAC,QAAQ,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,CAAC;IAG7E,CAAC;IA5CU,cAAc;QAJ1B,gEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;WACG;SAChC,CAAC;uBAI4L;OAHjL,cAAc,CA8C1B;IAAD,CAAC;AAAA;SA9CY,cAAc,gB","file":"82.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SwitchUserPage } from './switch-user';\n\n@NgModule({\n  declarations: [\n    SwitchUserPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SwitchUserPage),\n  ],\n})\nexport class SwitchUserPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/switch-user/switch-user.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { HttpProvider } from '../../providers/http/http';\nimport { Data } from '../../providers/data/data';\nimport { GetterSetter } from '../../providers/getterSetter/getterSetter';\nimport {CommonUtilities} from '../../providers/commonUtilities/commonUtilities';\n\n/**\n * Generated class for the SwitchUserPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-switch-user',\n  templateUrl: 'switch-user.html',\n})\nexport class SwitchUserPage {\n  private detail: Array<any> = []\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private httpProvider: HttpProvider, private data: Data, private getSet: GetterSetter,private utility:CommonUtilities) {\n  }\n\n  ionViewDidLoad() {\n    this.data.getData('loginDetails').then((response:any)=>{\n      if(response){\n        \n        this.utility.updateLoader(true);\n       \n        this.httpProvider.http.commonService({ url: 'getEdgeUsers', data: {'userId':response.details.userDetails.userId}, dashboard: true }).subscribe((response: any) => {\n        \n          if (response) {\n            if (response.details.responseList.length > 0) {\n              this.detail = response.details.responseList;\n             \n              this.utility.updateLoader(false);\n            }\n          }\n        },err=>{\n          this.utility.updateLoader(false);\n        })\n      }\n\n    })\n  \n  }\n\n  goToPage(userData) {\n    let fingerprintValue;\n   \n    if (this.getSet.getValue() == 'undefined') {\n      fingerprintValue = false\n    } else {\n      fingerprintValue = this.getSet.getValue();\n    }\n   \n    this.data.saveData('loggedInIds',userData.userId)\n    this.data.saveData('encryptedToken', userData.encryptedToken);\n    this.navCtrl.setRoot('NewHomePage', { 'fromSwitchUser': fingerprintValue })\n\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/switch-user/switch-user.ts"],"sourceRoot":""}
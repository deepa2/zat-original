{"version":3,"sources":["../../src/container/editProfile/editProfile.module.ts","../../src/container/editProfile/editProfile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACA;AACsB;AACH;AACmB;AAgBtF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAdjC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uFAAgB;gBAChB,sEAAe,CAAC,QAAQ,CAAC,qEAAe,CAAC;aAC1C;YACD,SAAS,EAAE;gBACT,oFAAU;gBACV,uGAAkB;aACnB;SACF,CAAC;OAEW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBgB;AACoE;AAClF;AACK;AAE0B;AAClB;AACiC;AAOlF;IAoCI,yBAAoB,OAAsB,EAC9B,QAAwB,EACxB,SAAoB,EACpB,KAAgC,EAChC,WAAwB,EACxB,iBAAoC,EACpC,OAAwB,EACxB,SAA0B;QAPlB,YAAO,GAAP,OAAO,CAAe;QAC9B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,UAAK,GAAL,KAAK,CAA2B;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAiB;QACxB,cAAS,GAAT,SAAS,CAAiB;QAxCtC,YAAO,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChD,mBAAc,GAAQ,EAAE,CAAC;QAIzB,uBAAkB,GAAe,EAAE,CAAC;QACpC,eAAU,GAAe,EAAE,CAAC;QAC5B,SAAI,GAAe,EAAE,CAAC;QAEtB,6BAAwB,GAAY,KAAK,CAAC;QAC1C,2BAAsB,GAAY,KAAK,CAAC;QAKxC,aAAQ,GAAW,IAAI,CAAC;QACxB,UAAK,GAAQ,EAAE,CAAC;QAChB,SAAI,GAAG,EAAE,CAAC;QACF,wBAAmB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QACvD,wBAAmB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QACvD,4BAAuB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QAC3D,2BAAsB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QAC1D,qBAAgB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QAM5D,aAAQ,GAAY,KAAK,CAAC;QAC1B,6BAAwB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QAC5D,0BAAqB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QACzD,eAAU,GAAY,IAAI,CAAC;IAU3B,CAAC;IAED,kDAAwB,GAAxB;QAAA,iBAuBC;QArBG,IAAI,GAAG,CAAC;QAER,IAAI,IAAI,CAAC,QAAQ,IAAI,YAAY,EAAE;YAC/B,GAAG,GAAG,4BAA4B,CAAC;SACtC;aAAM;YACH,GAAG,GAAG,0BAA0B,CAAC;SACpC;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qEAA+B,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QAElE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,oEAA4B,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YAC9F,IAAI,GAAG,EAAE;gBACL,IAAI,GAAG,CAAC,OAAO,EAAE;oBACb,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC;iBACjC;gBACD,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;aAEpC;QAEL,CAAC,EAAE,UAAC,GAAG;QACP,CAAC,CAAC;IACN,CAAC;IAED,wCAAc,GAAd,UAAe,IAAI;QAEf,IAAI,aAAa,GAAG;YAChB,cAAc,EAAE,IAAI,CAAC,YAAY;YACjC,aAAa,EAAE,IAAI,CAAC,YAAY;YAChC,oBAAoB,EAAE,IAAI,CAAC,kBAAkB;YAC7C,SAAS,EAAE,YAAY;YACvB,aAAa,EAAE,IAAI,CAAC,mBAAmB;YACvC,2BAA2B,EAAE,IAAI,CAAC,YAAY;SACjD;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,eAAe,EAAE,aAAa,EAAE,CAAC,CAAC;IAE9E,CAAC;IAED,0CAAgB,GAAhB;QAAA,iBAUC;QATG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACvD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACrE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,mEAA2B,CAAC,CAAC;QACpE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,uEAA+B,CAAC,CAAC,SAAS,CAAC,iBAAO;YACrG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC;IAC/C,CAAC;IAED,0CAAgB,GAAhB;QACI,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;QAC3C,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;QAC5C,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;IAC7C,CAAC;IAED,iCAAO,GAAP;QAEI,IAAI,aAAa,GAAG;YAChB,cAAc,EAAE,CAAC;YACjB,oBAAoB,EAAE,CAAC;YACvB,SAAS,EAAE,YAAY;YACvB,MAAM,EAAE,KAAK;YACb,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,YAAY;YAC5G,aAAa,EAAE,EAAE;YACjB,2BAA2B,EAAE,IAAI,CAAC,YAAY;SAEjD;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,eAAe,EAAE,aAAa,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,0CAAgB,GAAhB;QAAA,iBAwCC;QAvCG,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC9B,OAAO,EAAE,2JAA2J;YACpK,qBAAqB,EAAE,KAAK;YAC5B,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE;oBAET,CAAC;iBAEJ;gBACD;oBACI,IAAI,EAAE,KAAK;oBACX,OAAO,EAAE;wBAEL,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAAgC,CAAC,sBAAsB,CAAC,CAAC;oBACrF,CAAC;iBACJ;aACJ;SAEJ,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,oEAA4B,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5F,2BAA2B;YAC3B,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iEAAyB,EAAE,CAAC,CAAC;YACrD,IAAI,IAAI,EAAE;gBACN,2BAA2B;gBAC3B,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,mCAAmC,CAAC,CAAC,IAAI,CAAC;oBAChE,uDAAuD;oBACxD,sBAAsB;oBACtB,IAAI,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC;oBACtD,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;gBAExC,CAAC,CAAC;aACL;QACL,CAAC,CAAC;IACN,CAAC;IAED,sCAAY,GAAZ,UAAa,OAAO;QAEhB,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;SACxB;aAAM;YACH,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACtB;SACJ;IAEL,CAAC;IAlLQ,eAAe;QAJ3B,gEAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;WACG;SAClC,CAAC;kFAqC4C;YACpB,iEAAc;YACb,2DAAS;YACb,mEAAK;YACC,wEAAW;YACL,oGAAiB;YAC3B,sEAAe;YACb,YAAe;OA3C7B,eAAe,CAoL3B;IAAD,CAAC;AAAA;SApLY,eAAe,e","file":"108.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EditProfilePage } from './editProfile';\nimport { ComponentsModule } from '../../components/components.module';\nimport { Attachment } from '../../providers/attachment/attachment';\nimport { FormControlService } from '../../providers/formService/form-control.service';\n\n@NgModule({\n  declarations: [\n    EditProfilePage\n  ],\n  imports: [\n    ComponentsModule,\n    IonicPageModule.forChild(EditProfilePage)\n  ],\n  providers: [\n    Attachment,\n    FormControlService\n  ]\n})\n\nexport class EditProfilePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/editProfile/editProfile.module.ts","import { Component, OnInit } from '@angular/core';\nimport { ViewController, IonicPage, NavParams, LoadingController, Loading, NavController, AlertController } from 'ionic-angular';\nimport { Store } from \"@ngrx/store\";\nimport * as fromStore from '../../store';\nimport { Observable } from \"rxjs\";\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { CommonUtilities } from '../../providers/commonUtilities/commonUtilities';\n\n@IonicPage()\n@Component({\n    selector: 'page-editProfile',\n    templateUrl: 'editProfile.html'\n})\nexport class EditProfilePage {\n\n    profileArray: FormArray;\n    myGroup: FormGroup = this.formBuilder.group({});\n    profileDetails: any = {};\n    loading$: Observable<any>;\n    feedbackResponse$: Observable<any>;\n    userId: number;\n    persnalInfoDetails: Array<any> = [];\n    expDetails: Array<any> = [];\n    list: Array<any> = [];\n    selectOptions: any;\n    uploadMariageCertificate: boolean = false;\n    uploadBirthCertificate: boolean = false;\n    minDate: string;\n    maxDate: string;\n    docList: any;\n    formData: FormData;\n    editType: string = null;\n    items: any = [];\n    hide = [];\n    private _addLoadingListener: Subscription = new Subscription();\n    private _addSuccessListener: Subscription = new Subscription();\n    private _profileDetailsListener: Subscription = new Subscription();\n    private _uploadLoadingListener: Subscription = new Subscription();\n    private _getobUploadData: Subscription = new Subscription();\n    fieldLists: any;\n    degreeStyle: any;\n    hasRequested: any;\n    hasRequestedShowMsg: string;\n    loader: Loading;\n    showForm: boolean = false;\n    _submitExperienceLoading: Subscription = new Subscription();\n    _submitExperienceData: Subscription = new Subscription();\n    showSubmit: boolean = true;\n\n    constructor(private navCtrl: NavController,\n        private viewCtrl: ViewController,\n        private navParams: NavParams,\n        private store: Store<fromStore.AppState>,\n        private formBuilder: FormBuilder,\n        private loadingController: LoadingController,\n        private utility: CommonUtilities,\n        private alertCtrl: AlertController) {\n    }\n\n    getAssociatePersonalData() {\n\n        let url;\n\n        if (this.editType == 'experience') {\n            url = 'getAssociateExperienceData';\n        } else {\n            url = 'getAssociatePersonalData';\n        }\n\n        this.store.dispatch(new fromStore.EditProfileDataAction(url, {}));\n\n        this._profileDetailsListener = this.store.select<any>(fromStore.getProfileEditData).subscribe((res) => {\n            if (res) {\n                if (res.details) {\n                    this.expDetails = res.details;\n                }\n                this.showSubmit = res.showSubmit;\n\n            }\n\n        }, (err) => {\n        })\n    }\n\n    goToAddDetails(item) {\n\n        let selectedfield = {\n            \"experienceId\": item.experienceId,\n            \"referenceId\": item.experienceId,\n            \"previousEmployerId\": item.previousEmployerId,\n            'section': 'experience',\n            'formMessage': this.hasRequestedShowMsg,\n            'isAvailableForFinalSubmit': this.hasRequested\n        }\n\n        this.navCtrl.push('ObAddDetailsPage', { 'selectedField': selectedfield });\n\n    }\n\n    ionViewWillEnter() {\n        this.editType = this.navParams.get('type');\n        this.hasRequested = this.navParams.get('hasRequested');\n        this.hasRequestedShowMsg = this.navParams.get('hasRequestedShowMsg');\n        this.getAssociatePersonalData();\n        this.loading$ = this.store.select<any>(fromStore.getProfileLoading);\n        this._submitExperienceLoading = this.store.select<any>(fromStore.getEditProfileLoading).subscribe(loading => {\n            this.updateLoader(loading);\n        })\n        console.log(this.navCtrl.getActive().index)\n    }\n\n    ionViewWillLeave() {\n        this._addLoadingListener.unsubscribe();\n        this._addSuccessListener.unsubscribe();\n        this._profileDetailsListener.unsubscribe();\n        this._uploadLoadingListener.unsubscribe();\n        this._getobUploadData.unsubscribe();\n        this._submitExperienceLoading.unsubscribe();\n        this._submitExperienceData.unsubscribe();\n    }\n\n    addForm() {\n\n        let selectedfield = {\n            \"experienceId\": 0,\n            \"previousEmployerId\": 0,\n            'section': 'experience',\n            \"mode\": \"add\",\n            \"addReferenceId\": this.expDetails.length == 0 ? 0 : this.expDetails[this.expDetails.length - 1].experienceId,\n            'formMessage': '',\n            'isAvailableForFinalSubmit': this.hasRequested\n\n        }\n\n        this.navCtrl.push('ObAddDetailsPage', { 'selectedField': selectedfield });\n    }\n\n    submitExperience() {\n        let alert = this.alertCtrl.create({\n            message: 'After submitting the experience(s),you will not be able to add/edit the experience for next 48 hours.<br> Are you sure you want to submit the experience?',\n            enableBackdropDismiss: false,\n            buttons: [\n                {\n                    text: 'No',\n                    role: 'no',\n                    handler: () => {\n\n                    }\n\n                },\n                {\n                    text: 'Yes',\n                    handler: () => {\n\n                        this.store.dispatch(new fromStore.SubmitExperienceAction('submitExperienceData'))\n                    }\n                }\n            ],\n\n        });\n\n        alert.present();\n        \n        this._submitExperienceData = this.store.select<any>(fromStore.getEditProfileData).subscribe(data => {\n            //  this.updateLoader(true)\n            this.store.dispatch(new fromStore.SubmitResetData());\n            if (data) {\n                // this.updateLoader(false)\n                this.utility.presentAlert(\"Experience submitted successfully\").then(() => {\n                    //this.store.dispatch(new fromStore.SubmitResetData());\n                   // this.navCtrl.pop();\n                   let currentIndex = this.navCtrl.getActive().index - 1;\n                   this.navCtrl.remove(currentIndex, 2);\n\n                })\n            }\n        })\n    }\n\n    updateLoader(loading) {\n\n        if (loading) {\n            this.loader = this.loadingController.create();\n            this.loader.present()\n        } else {\n            if (this.loader) {\n                this.loader.dismiss();\n                this.loader = null;\n            }\n        }\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/editProfile/editProfile.ts"],"sourceRoot":""}
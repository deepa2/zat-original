{"version":3,"sources":["../../src/container/zents/dashboard/my-attendance-timesheet/my-attendance-timesheet.module.ts","../../src/container/zents/dashboard/my-attendance-timesheet/my-attendance-timesheet.ts"],"names":[],"mappings":"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","file":"37.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MyAttendanceTimesheetPage } from './my-attendance-timesheet';\n\n@NgModule({\n  declarations: [\n    MyAttendanceTimesheetPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MyAttendanceTimesheetPage),\n  ],\n})\nexport class MyAttendanceTimesheetPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zents/dashboard/my-attendance-timesheet/my-attendance-timesheet.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpProvider } from '../../../../providers/http/http';\nimport { CommonUtilities } from '../../../../providers/commonUtilities/commonUtilities'\nimport moment from 'moment';\n/**\n * Generated class for the MyAttendanceTimesheetPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-my-attendance-timesheet',\n  templateUrl: 'my-attendance-timesheet.html',\n})\n\nexport class MyAttendanceTimesheetPage {\n\n  // pageTitle: String = \"Attendance / Timesheets\"\n  // onlyHours: number;\n  isSubmitted: boolean = false;\n  private data = {\n    isDataAvailable: false,\n    attendanceList: []\n  }\n  private tsDates = {\n    tsMinDate: null,\n    tsMaxDate: null\n  }\n  private timeSheetForm: FormGroup;\n  private selectedProject: any;\n  private selectedStatus: any;\n\n  private tsStartDate: String;\n  private tsEndDate: String;\n  private compareFlag: boolean = false;\n  private oneMonthMessageFlag: boolean = false;\n  private invalidDateMessageFlag: boolean = false;\n\n  private projectAllocationList: Array<any> = [];\n\n  constructor(private navCtrl: NavController, private fb: FormBuilder, private httpProvider: HttpProvider, private utility: CommonUtilities) {\n  }\n\n  ionViewDidLoad() {\n    // this.getApprovalDashboardData();\n    this.getMyTimesheetDashboardData();\n  }\n\n  checkDateToHighlight(date) {\n    let splitdate = date.split(\" \");\n    if (splitdate[0] <= 8) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  ngOnInit() {\n    this.timeSheetForm = this.fb.group({\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      projName: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n\n  }\n\n  // getApprovalDashboardData() {\n  //   this.utility.updateLoader(true);\n  //   this.httpProvider.http.zentsCommonService({ url: \"getEmployeeDashBoardNew\", data: {}, dashboard: true }).subscribe((res: any) => {\n  //     this.utility.updateLoader(false);\n  //     if (res) {\n  //       this.projectAllocationList = res.projectAllocationList;\n  //       this.tsStartDate = (res.monthlyLockDate);\n  //       this.tsEndDate = (res.serverDate);\n  //       // let myTimesheetCalendarMinDate = moment(res.serverDate).subtract(1, 'years').format('YYYY-MM-DD');\n  //       this.tsDates.tsMinDate = res.myTimesheetCalendarMinDate;\n  //       this.tsDates.tsMaxDate = res.timesheetMaxDate;\n  //       this.data.isDataAvailable = true;\n\n  //       if (res.attendanceList) {\n  //         this.data.attendanceList = res.attendanceList;\n  //       }\n  //       if (res.projectAllocationList.length == 1) {\n  //         this.selectedProject = res.projectAllocationList[0];\n  //       }\n  //     }\n  //   }, (err) => {\n  //     this.utility.updateLoader(false);\n  //   })\n  // }\n\n  getMyTimesheetDashboardData() {\n    this.utility.updateLoader(true);\n    this.httpProvider.http.zentsCommonService({ url: \"getMyTimesheetDashboard\", data: {}, dashboard: true }).subscribe((res: any) => {\n      this.utility.updateLoader(false);\n      if (res) {\n        this.projectAllocationList = res.projectAllocationList;\n        this.tsStartDate = (res.monthlyLockDate);\n        this.tsEndDate = (res.serverDate);\n        // let myTimesheetCalendarMinDate = moment(res.serverDate).subtract(1, 'years').format('YYYY-MM-DD');\n        this.tsDates.tsMinDate = res.myTimesheetCalendarMinDate;\n        this.tsDates.tsMaxDate = res.timesheetMaxDate;\n        this.data.isDataAvailable = true;\n\n        if (res.attendanceList) {\n          this.data.attendanceList = res.attendanceList;\n        }\n        if (res.projectAllocationList.length == 1) {\n          this.selectedProject = res.projectAllocationList[0];\n        }\n      }\n    }, (err) => {\n      this.utility.updateLoader(false);\n    })\n  }\n\n  openMyTimesheetPage() {\n    this.isSubmitted = true;\n    if (this.timeSheetForm.valid && !this.compareFlag && !this.oneMonthMessageFlag) {\n      let selectedProjIds: Array<any> = [];\n      let selProjectByUser = this.selectedProject == 'all' ? \"all\" : this.selectedProject.projectId;\n\n      if (this.selectedProject == 'all') {\n        this.projectAllocationList.map((data: any) => {\n          selectedProjIds.push(data.projectId);\n        });\n      } else {\n        selectedProjIds.push(this.selectedProject.projectId);\n      }\n\n      this.navCtrl.push('MyTimesheetsPage', {\n        \"startDate\": (this.tsStartDate),\n        \"endDate\": (this.tsEndDate),\n        \"projectName\": this.selectedProject.projectName,\n        \"projectId\": selProjectByUser,\n        \"projectIds\": selectedProjIds,\n        \"status\": this.selectedStatus,\n        \"type\": \"myTimesheet\"\n      });\n\n\n    } else {\n      return false;\n    }\n  }\n\n  onEndDateSelect(e) {\n    this.compareFlag = moment(this.timeSheetForm.get('endDate').value) < moment(this.timeSheetForm.get('startDate').value);\n    this.oneMonthMessageFlag = this.checkThirtyDaysDifference();\n    if (!this.oneMonthMessageFlag) {\n      this.getProjectListOnDateChange();\n    }\n    // if(moment(this.timeSheetForm.get('endDate').value) < moment(this.tsDates.tsMinDate) || moment(this.timeSheetForm.get('endDate').value) >  moment(this.tsDates.tsMaxDate) ){\n    //   this.invalidDateMessageFlag = true;\n    // } \n  }\n\n  onStartDateSelect(e) {\n    this.compareFlag = moment(this.timeSheetForm.get('startDate').value) > moment(this.timeSheetForm.get('endDate').value);\n    this.oneMonthMessageFlag = this.checkThirtyDaysDifference();\n    if (!this.oneMonthMessageFlag) {\n      this.getProjectListOnDateChange();\n    }\n    this.invalidDateMessageFlag = moment(this.timeSheetForm.get('startDate').value) < moment(this.tsDates.tsMinDate) || moment(this.timeSheetForm.get('startDate').value) > moment(this.tsDates.tsMaxDate);\n  }\n\n  checkThirtyDaysDifference() {\n    let endDate = moment(this.timeSheetForm.get('endDate').value);\n    let startDate = moment(this.timeSheetForm.get('startDate').value);\n    let diff = endDate.diff(startDate, 'days');\n    // console.log('diff: ', diff);\n    return diff >= 0 && diff <= 30 ? false : true;\n  }\n\n  get t() {\n    return this.timeSheetForm.controls;\n  }\n\n  getProjectListOnDateChange() {\n    this.utility.updateLoader(true);\n    let data = {\n      \"startDate\": this.timeSheetForm.get('startDate').value,\n      \"endDate\": this.timeSheetForm.get('endDate').value\n    }\n\n    this.httpProvider.http.zentsCommonService({ url: \"getProjectListData\", data: data, dashboard: true }).subscribe((res: any) => {\n      this.utility.updateLoader(false);\n      if (res && res.length > 0) {\n        if (!(JSON.stringify(this.projectAllocationList) === JSON.stringify(res))) {\n          this.projectAllocationList = res;\n          if (this.projectAllocationList.length == 1) {\n            this.selectedProject = this.projectAllocationList[0];\n          }\n        }\n      }\n    }, (err) => {\n      this.utility.updateLoader(false);\n    })\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zents/dashboard/my-attendance-timesheet/my-attendance-timesheet.ts"],"sourceRoot":""}
{"version":3,"sources":["../../src/container/announcement/announcement.module.ts","../../src/container/announcement/announcement.ts"],"names":[],"mappings":"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","file":"116.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AnnouncementPage } from './announcement';\nimport { ComponentsModule } from '../../components/components.module'; \n\n@NgModule({\n  declarations: [\n    AnnouncementPage,\n  ],\n  imports: [\n    ComponentsModule,\n    IonicPageModule.forChild(AnnouncementPage)\n  ],\n\n})\nexport class AnnouncementPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/announcement/announcement.module.ts","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Navbar, PopoverController } from 'ionic-angular';\nimport { CommonUtilities } from '../../providers/commonUtilities/commonUtilities';\nimport { Store } from \"@ngrx/store\";\nimport * as fromStore from '../../store';\nimport { Observable } from \"rxjs\";\nimport { Subscription } from 'rxjs/Subscription';\nimport { Data } from '../../providers/data/data';\n\n@IonicPage()\n@Component({\n  selector: 'page-announcement',\n  templateUrl: 'announcement.html',\n})\nexport class AnnouncementPage implements OnInit, OnDestroy {\n\n  private url: string = 'getAllAnnouncements';\n\n  private announcements$: Observable<any>;\n  private loading$: Observable<any>;\n  private start: number = 0;\n  private end: number = 10;\n  private itemsLength: number;\n  private infiniteScroll: any = '';\n  private refresher: any = '';\n  private formData: FormData;\n  private showOptions: boolean = false;\n  private addAnnouncementRole: any;\n  private pageTitle: string;\n  private pageType: string;\n  private notificationCount: number;\n  private payload: any = {\n    \"start\": this.start,\n    \"end\": this.end\n  };\n  @ViewChild(Navbar) navBar: Navbar;\n\n  private _roleListener: Subscription = new Subscription();\n  private _listListener: Subscription = new Subscription();\n  private _notificationListener: Subscription = new Subscription();\n\n  constructor(private navCtrl: NavController, private navParams: NavParams, private store: Store<fromStore.AppState>, private utility: CommonUtilities, private popoverCtrl: PopoverController,\n    private dataService: Data) {\n\n      // get page title from home page\n    this.pageTitle = this.navParams.get('pageTitle');\n    if (this.pageTitle == undefined || this.pageTitle == null) {\n      this.pageTitle = 'Announcements';\n    }\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  // get all the announcements list\n  getAccouncements() {\n\n    this._listListener = this.store.select<any>(fromStore.getAccouncementState).subscribe((res) => {\n      if (res) {\n        if (res.data) {\n          this.announcements$ = res.data;\n          this.pageType = res.data.type;\n          this.itemsLength = res.data.length;\n        }\n      }\n\n      if (!res.pending && this.infiniteScroll) {\n        this.infiniteScroll.complete();\n      }\n\n      if (!res.pending && this.refresher) {\n        this.refresher.complete();\n      }\n\n    })\n\n  }\n\n  //infinite scroll to get next 10 announcements\n\n  doInfinite(infiniteScroll) {\n\n    this.infiniteScroll = infiniteScroll;\n\n    this.start = this.end;\n    this.end = this.start + 10;\n\n    this.payload = {\n      \"start\": this.start,\n      \"end\": this.end\n    };\n\n    this.store.dispatch(new fromStore.GetAnnouncements(this.url, this.payload));\n\n  }\n\n  // pull to refresh for new announcements\n  doRefresh(refresher) {\n\n    this.refresher = refresher;\n\n    this.start = 0;\n    this.end = 10;\n\n    this.payload = {\n      \"start\": this.start,\n      \"end\": this.end\n    };\n\n    this.store.dispatch(new fromStore.GetAnnouncementsReset());\n\n    this.store.dispatch(new fromStore.GetAnnouncements(this.url, this.payload));\n\n  }\n\n\n  //change date format to mmddyy\n  formatDate(obj) {\n    return this.utility.formatDate(obj);\n  }\n\n  // to add any announcement \n  add() {\n    this.navCtrl.push('AddPage', { 'type': 'addAnnouncement', 'questionId': null, 'answerType': null });\n  }\n\n\n  goToPage(page) {\n    if (page == 'SearchPage') {\n      this.navCtrl.push(page, { 'searchType': 'announcement' });\n    } else if (page == 'NotificationPage') {\n      this.navCtrl.push(page, { 'notificationType': 'BROADCAST' });\n    } else {\n      this.navCtrl.push(page);\n    }\n\n  }\n\n  //check for admin role\n  getRole() {\n    this.store.select<any>(fromStore.getMiscData).subscribe((res) => {\n      if (res) {\n        this.addAnnouncementRole = res.role.isAdmin;\n      }\n\n    });\n\n  }\n  // show popover menu\n  presentOptions(myEvent) {\n\n    let popover = this\n      .popoverCtrl\n      .create('PopoverPage', { 'type': 'addAnnouncement' });\n\n    popover.present({ ev: myEvent });\n\n  }\n\n  //on page load, this function reloads the notification count & check for new announcements \n  ionViewWillEnter() {\n    this.getNotificationCount();\n\n    this.formData = new FormData();\n\n    this.loading$ = this.store.select<any>(fromStore.getAccouncementLoading);\n\n    this.payload = {\n      \"start\": this.start,\n      \"end\": this.end\n    };\n\n    this.store.dispatch(new fromStore.GetAnnouncementsReset());\n\n    this.store.dispatch(new fromStore.GetAnnouncements(this.url, this.payload));\n\n    this.getAccouncements();\n\n    this.getRole();\n    // this.setBackButtonAction();\n\n  }\n\n  //get notification  count from store\n  getNotificationCount() {\n    this._notificationListener = this.store.select<any>(fromStore.getNotificationCount).subscribe((res) => {\n      this.notificationCount = res;\n    });\n\n  }\n\n  // on leaving the page, all the observables has to be unsubscribed\n  ngOnDestroy() {\n    this._listListener.unsubscribe();\n    this._roleListener.unsubscribe();\n    this._notificationListener.unsubscribe();\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/announcement/announcement.ts"],"sourceRoot":""}
{"version":3,"sources":["../../src/container/zendeavor/team-list-for-goal-setting/team-list-for-goal-setting.module.ts","../../src/container/zendeavor/team-list-for-goal-setting/team-list-for-goal-setting.ts"],"names":[],"mappings":"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","file":"47.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TeamListForGoalSettingPage } from './team-list-for-goal-setting';\n\n@NgModule({\n  declarations: [\n    TeamListForGoalSettingPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TeamListForGoalSettingPage),\n  ],\n})\nexport class TeamListForGoalSettingPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zendeavor/team-list-for-goal-setting/team-list-for-goal-setting.module.ts","import { HttpProvider } from './../../../providers/http/http';\nimport { CommonUtilities } from './../../../providers/commonUtilities/commonUtilities';\nimport { Component, ViewChild } from '@angular/core'\nimport { IonicPage, NavController, NavParams, PopoverController, ModalController, Content } from 'ionic-angular'\n\n\n/**\n * Generated class for the TeamListForGoalSettingPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-team-list-for-goal-setting',\n  templateUrl: 'team-list-for-goal-setting.html',\n})\nexport class TeamListForGoalSettingPage {\n\n  private url: any = \"associateListForGoalSetting\"\n  private statusModel: string = 'inProgress'\n  private submitAllurl: string = 'submitAll'\n  private teamlListData: any = []\n  private approvedList: any = []\n  private submittedList: any = []\n  private pendingList: any = []\n  private teamListResData: any = []\n  private userID: any\n  private kraType: any;\n  private userRole: any\n  private selectedSegmentName: string\n  private showHeaderButton: boolean = true\n  private sendReminderUrl: string = \"sendReminderForKRA\"\n  private inSelectionMode: boolean = false\n  private pendingListCount: number = 0\n  private submittedListCount: number = 0\n  private approvedListCount: number = 0\n\n  @ViewChild(Content) content: Content;\n\n\n\n  constructor(private navCtrl: NavController, private navParams: NavParams, private httpProvider: HttpProvider, private popoverCtrl: PopoverController,\n    private modalCtrl: ModalController, private utilitiy: CommonUtilities) {\n\n    this.userID = this.navParams.get('userID') || null\n    this.userRole = this.navParams.get('userRole') || null\n    this.kraType = this.navParams.get('kraType') || null\n    // this.selectedItem = this.navParams.get('selectedItem') || null\n    // this.showGoalSettingList = this.navParams.get('selectedOffering') || false\n    console.log(\"this.kraType \", this.kraType)\n    // this.getAssociateData()\n\n\n  }\n\n  ionViewDidLoad() {\n    // this.utilitiy.updateLoader(true)\n    // this.getAssociateData()\n  }\n  ionViewWillEnter() {\n    console.log('ionViewWillEnter ');\n\n    this.getAssociateData();\n  }\n\n  /**\n   * Api call for associate team list\n   */\n  getAssociateData() {\n    this.utilitiy.updateLoader(true)\n    let teamListUrl = {\n      // zenDeavorURL: this.url\n      url: this.url,\n      zenDeavorURL: true,\n      data: {\n        \"userId\": this.userID,\n        \"role\": this.userRole,\n        // \"processType\": this.kraType,\n        // \"isTeamList\": false\n      }\n    }\n\n    this.httpProvider.http.commonService(teamListUrl).subscribe((res) => {\n      this.utilitiy.updateLoader(false)\n      this.teamListResData = res['details']\n      this.pendingList = this.teamListResData['pendingList']\n      this.submittedList = this.teamListResData['submittedList']\n      // this.userRole = res['details'].role\n      // this.submitAllStatus = this.teamListResData['isSubmitAll']\n      // this.submitAllmsg = this.teamListResData['message']\n      // this.isAppraisalDateExpired = this.teamListResData.isExpired\n      if (!this.utilitiy.isEmptyOrNullOrUndefined(this.pendingList)) {\n        this.pendingList.filter((item) => {\n          if (item.isSelected == undefined) {\n            item.isSelected = true\n          }\n        })\n\n\n\n        // this.pendinglistToFilter = this.pendingList\n        // this.submittedlistToFilter = this.submittedList\n        // this.approvedlistToFilter = this.approvedList\n\n      }\n\n      this.approvedList = this.teamListResData['approvedList']\n      // getting count of pendingList\n      this.pendingListCount = this.pendingList.length\n      this.submittedListCount = this.submittedList.length\n      this.approvedListCount = this.approvedList.length\n\n\n\n    }, (err) => {\n      this.utilitiy.updateLoader(false)\n    })\n  }\n\n\n  segmentChanged(event, currentSegment) {\n    this.selectedSegmentName = currentSegment\n    if (this.selectedSegmentName == 'inProgress') {\n      this.showHeaderButton = true\n    } else {\n      this.showHeaderButton = false\n      // if (this.selectedSegmentName == 'moderation')\n      // this.content.resize();\n      console.log(\"content\", this.content)\n    }\n  }\n\n\n  presentOptions(myEvent) {\n    let popover = this\n      .popoverCtrl\n      .create('PopoverPage', { type: 'ZenDeavour', isSelected: this.inSelectionMode ? 'true' : 'false' })\n    popover.present({ ev: myEvent })\n    popover.onDidDismiss((res) => {\n      this.selectAll(res)\n    })\n  }\n\n  selectAll(type) {\n    if (type == \"select\") {\n      if (this.inSelectionMode)\n        this.inSelectionMode = false\n      else\n        this.inSelectionMode = true\n      // this.sendReminder()\n    }\n  }\n\n  /**\n  * Method for sending reminder to users\n  */\n  sendReminder() {\n    let selectedIds\n    selectedIds = this.pendingList.filter((item) => {\n      if (item.isSelected == true) {\n        return item\n      }\n    })\n    let userIDArray = []\n\n    selectedIds.forEach(element => {\n      userIDArray.push({ \"user_id\": element.employeeId })\n    })\n\n    if (this.inSelectionMode && selectedIds != \"\") {\n      this.utilitiy.updateLoader(true)\n\n      // this.utilities.hideLoading()\n      let reminderDetails = {\n        // zenDeavorURL: this.url\n        url: this.sendReminderUrl,\n        zenDeavorURL: true,\n\n        data: {\n          // \"processType\": this.kraType,\n          'userDetailList': userIDArray\n        }\n\n      }\n\n      this.httpProvider.http.commonService(reminderDetails).subscribe((res) => {\n        this.utilitiy.updateLoader(false)\n        let msg = res['status'].statusMessage\n        this.utilitiy.presentAlert(msg)\n        this.inSelectionMode = false\n        this.getAssociateData()\n      }, (err) => {\n        this.utilitiy.updateLoader(false)\n        // this.utilities.hideLoading()\n      })\n    } else {\n      this.utilitiy.presentAlert(\"Please select associates\");\n    }\n\n  }\n\n  selectCard(userData, index) {\n    if (this.inSelectionMode) {\n      this.pendingList.filter((item) => {\n        if (item.employeeId == userData.employeeId) {\n          item.isSelected = !item.isSelected\n        }\n      })\n    }\n    // else {\n    //   this.navCtrl.push(\"ZenDeavorKraPage\")\n    // }\n  }\n\n\n  sendReminderPopover(event, userid) {\n\n    let popover1 = this\n      .popoverCtrl\n      .create('PopoverPage', { type: 'sendReminder' })\n    popover1.present({ ev: event })\n\n    popover1.onDidDismiss((res) => {\n      if (res == 'sendReminder') {\n        this.sendReminderToOneUser(userid)\n\n      }\n    })\n  }\n\n  sendReminderToOneUser(userID) {\n    this.utilitiy.updateLoader(true)\n\n    // this.utilities.hideLoading()\n    let reminderDetails = {\n      // zenDeavorURL: this.url\n      url: this.sendReminderUrl,\n      \"processType\": this.kraType,\n      zenDeavorURL: true,\n      data: {\n        \"processType\": this.kraType,\n\n        userDetailList: [\n          {\n            \"user_id\": userID\n          },\n        ]\n      }\n\n    }\n\n    this.httpProvider.http.commonService(reminderDetails).subscribe((res) => {\n      this.utilitiy.updateLoader(false)\n      if (res) {\n        let msg = res['status'].statusMessage\n        this.utilitiy.presentAlert(msg)\n        this.inSelectionMode = false\n        this.getAssociateData()\n      }\n\n    }, (err) => {\n      this.utilitiy.updateLoader(false)\n      // this.utilities.hideLoading()\n    })\n\n  }\n\n  openReviewPage(userData) {\n    this.navCtrl.push('ReviewGoalsPage', {\n      userID: userData.employeeId,\n      userRole: this.userRole,\n      kraYear: userData.year,\n      isDirectApprove: userData.isDirectApprove\n    })\n    console.log('details sent to review page', userData)\n  }\n\n}\n\n// check for hard coded dates\n\n\n// WEBPACK FOOTER //\n// ./src/container/zendeavor/team-list-for-goal-setting/team-list-for-goal-setting.ts"],"sourceRoot":""}
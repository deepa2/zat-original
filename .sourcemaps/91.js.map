{"version":3,"sources":["../../src/container/questions/questions.module.ts","../../src/container/questions/questions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACJ;AAEG;AACF;AACwB;AAE3B;AACI;AACe;AAa7D;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAX/B,+DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,iEAAa,CAAC;YAC7B,OAAO,EAAE;gBACP,qEAAY;gBACZ,mEAAW;gBACX,uFAAgB;gBAChB,sEAAe,CAAC,QAAQ,CAAC,iEAAa,CAAC;gBACvC,gEAAW,CAAC,UAAU,CAAC,KAAK,EAAE,0DAAQ,EAAC,EAAC,YAAY,kEAAC,CAAC;gBACtD,4DAAa,CAAC,UAAU,CAAC,yDAAO,CAAC;aAClC;SACF,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBqB;AACa;AACG;AAEjC;AACa;AACR;AACQ;AASjD;IA6BE,uBAAoB,OAAsB,EAChC,SAAoB,EACpB,KAAgC,EAChC,iBAAoC,EACpC,WAA8B,EAC9B,WAAiB;QAL3B,iBAsBC;QAtBmB,YAAO,GAAP,OAAO,CAAe;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,UAAK,GAAL,KAAK,CAA2B;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAmB;QAC9B,gBAAW,GAAX,WAAW,CAAM;QA9B3B,cAAS,GAAW,CAAC,CAAC;QACtB,YAAO,GAAW,EAAE,CAAC;QACrB,gBAAW,GAAW,CAAC,CAAC;QACxB,eAAU,GAAW,iBAAiB,CAAC;QAIvC,aAAQ,GAAW,MAAM,CAAC;QAC1B,gBAAW,GAAY,IAAI,CAAC;QAM5B,WAAM,GAAQ,EAAE,CAAC;QAMT,kBAAa,GAAiB,IAAI,+DAAY,EAAE,CAAC;QACjD,kBAAa,GAAiB,IAAI,+DAAY,EAAE,CAAC;QACjD,0BAAqB,GAAiB,IAAI,+DAAY,EAAE,CAAC;QAU/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,SAAS,IAAI,cAAc,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAChE,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,gBAAgB,EAAE;YAC7C,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAC9B;QACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,SAAc;YAC3D,IAAI,SAAS,CAAC,OAAO,EAAE;gBACrB,KAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC;aACxD;QACH,CAAC,CAAC;IACJ,CAAC;IAED,mCAAW,GAAX,UAAY,IAAI;QAAhB,iBAiDC;QA/CC,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,IAAI,IAAI,YAAY,EAAE;YACrD,IAAI,CAAC,MAAM,GAAG;gBACZ,MAAM,EAAE,IAAI,CAAC,IAAI;gBACjB,OAAO,EAAE,IAAI,CAAC,SAAS;gBACvB,KAAK,EAAE,IAAI,CAAC,OAAO;gBACnB,QAAQ,EAAE,SAAS;aACpB;SACF;aAAM;YACL,IAAI,CAAC,MAAM,GAAG;gBACZ,MAAM,EAAE,IAAI,CAAC,IAAI;gBACjB,OAAO,EAAE,IAAI,CAAC,SAAS;gBACvB,KAAK,EAAE,IAAI,CAAC,OAAO;gBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;aACpB;SACF;QAGD,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAA8B,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACvF;aACI,IAAI,IAAI,IAAI,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iEAA2B,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACpF;aACI,IAAI,IAAI,IAAI,SAAS,EAAE;YAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAA8B,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACvF;QAED,OAAO,IAAI,OAAO,CAAO,iBAAO;YAE9B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAM,kEAA0B,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBAExF,IAAI,QAAQ,CAAC,OAAO,IAAI,KAAK,IAAI,QAAQ,CAAC,QAAQ,IAAI,KAAK,IAAI,QAAQ,CAAC,aAAa,IAAI,KAAK,EAAE;oBAE9F,IAAI,QAAQ,CAAC,IAAI,EAAE;wBACjB,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC5B,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;wBAClD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;qBACzC;oBAED,OAAO,EAAE,CAAC;iBACX;YAEH,CAAC,EAAE,aAAG;YACN,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,kCAAU,GAAV,UAAW,cAAc;QAGvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YAC9B,cAAc,CAAC,QAAQ,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,qCAAa,GAAb,UAAc,OAAO;QAArB,iBA2BC;QA1BC,IAAI,OAAO,GAAG,IAAI;aACf,WAAW;aACX,MAAM,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAInE,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;QAEjC,OAAO,CAAC,YAAY,CAAC,UAAC,IAAI;YAIxB,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2DAAmB,CAAC,IAAI,CAAC,CAAC;gBAClD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,KAAI,CAAC,OAAO,GAAE,EAAE,CAAC;gBAEjB,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;oBAC3B,KAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACJ;QAGH,CAAC,CAAC;IAEJ,CAAC;IAED,sCAAc,GAAd,UAAe,OAAO;QAAtB,iBAoBC;QAlBC,IAAI,OAAO,GAAG,IAAI;aACf,WAAW;aACX,MAAM,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEzE,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;QAEjC,OAAO,CAAC,YAAY,CAAC,UAAC,IAAI;YAExB,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACxC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,6DAAqB,EAAE,CAAC;gBAChD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yDAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;aAElD;QAEH,CAAC,CAAC;IAEJ,CAAC;IAED,yBAAyB;IAGzB,wBAAwB;IAExB,6CAA6C;IAC7C,4BAA4B;IAC5B,QAAQ;IAER,IAAI;IAEJ,gCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,IAAI,IAAI,YAAY,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;SACpD;aAAM,IAAI,IAAI,IAAI,kBAAkB,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,kBAAkB,EAAE,UAAU,EAAE,CAAC,CAAC;SAC7D;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;IAGD,uCAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;YAC9B,IAAI,EAAE,IAAI,CAAC,UAAU;SACtB,CAAC,CAAC;IACL,CAAC;IAED,2BAAG,GAAH;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;IAClG,CAAC;IAED,sCAAc,GAAd;QACE,sDAAsD;QADxD,iBAcC;QAXC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YACzC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yDAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;aAClD;iBAAM;gBACL,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yDAAiB,CAAC,YAAY,CAAC,CAAC,CAAC;aAE1D;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,wEAAgC,CAAC,CAAC;IAE3E,CAAC;IAED,wCAAgB,GAAhB;QAAA,iBA6EC;QA1EC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,2DAAmB,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAC3D,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC;aAC9B;QAEH,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAQ;YAEjD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAM,yDAAiB,CAAC,CAAC,SAAS,CAAC,UAAC,YAAY;gBAEpF,IAAI,YAAY,IAAI,WAAW,EAAE;oBAC/B,IAAI,KAAI,CAAC,cAAc,EAAE;wBACvB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,cAAc;qBAChC;yBAAM;wBACL,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBACvD;iBAEF;qBAAM,IAAI,YAAY,IAAI,OAAO,EAAE;oBAElC,IAAI,KAAI,CAAC,cAAc,EAAE;wBACvB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,cAAc;qBAChC;yBAAM;wBACL,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBAClD;iBAEF;qBAAM,IAAI,YAAY,IAAI,IAAI,EAAE;oBAE/B,IAAI,KAAI,CAAC,cAAc,EAAE;wBACvB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,cAAc;qBAChC;yBAAM;wBACL,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBAC/C;iBAEF;qBAAM;oBAEL,IAAI,KAAI,CAAC,cAAc,EAAE;wBACvB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,cAAc;qBAChC;yBAAM;wBACL,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBAC7C;iBAGF;gBAED,IAAI,YAAY,EAAE;oBAEhB,IAAI,YAAY,IAAI,OAAO,IAAI,YAAY,IAAI,IAAI,EAAE;wBACnD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;qBACjB;yBAAM;wBACL,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;qBACjB;oBAED,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC;oBAEzB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBAEnB,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;wBAC3B,8BAA8B;oBAChC,CAAC,CAAC,CAAC;iBAEJ;gBAED,qCAAqC;YAGvC,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC;QAEF,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAE9B,CAAC;IAED,4CAAoB,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,sEAA8B,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YAChG,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAID,wCAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;IAC3C,CAAC;IA1RmB;QAAnB,gEAAS,CAAC,8DAAO,CAAC;kCAAU,8DAAO;kDAAC;IAvB1B,aAAa;QAJzB,gEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACQ;SAC9B,CAAC;6EA8B0C;YACrB,2DAAS;YACb,wEAAK;YACO,wEAAiB;YACvB,oEAAiB;YACjB,IAAI;OAlChB,aAAa,CAmTzB;IAAD,CAAC;AAAA;SAnTY,aAAa,e","file":"91.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { QuestionsPage } from './questions';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers, effects,metaReducers } from '../../store';\n\n@NgModule({\n  declarations: [QuestionsPage],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    IonicPageModule.forChild(QuestionsPage),\n    StoreModule.forFeature('app', reducers,{metaReducers}),\n    EffectsModule.forFeature(effects),\n  ],\n})\nexport class QuestionsPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/container/questions/questions.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { NavController, Content, NavParams } from 'ionic-angular';\nimport { IonicPage, LoadingController, PopoverController } from 'ionic-angular';\nimport { Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport { Subscription } from 'rxjs/Subscription';\nimport * as fromStore from '../../store';\nimport { Data } from '../../providers/data/data';\n\n\n\n@IonicPage()\n@Component({\n  selector: 'page-list',\n  templateUrl: 'questions.html'\n})\nexport class QuestionsPage {\n\n  items$: Observable<any>;\n  loading$: Observable<any>;\n  startList: number = 0;\n  endList: number = 15;\n  itemsLength: number = 0;\n  currentURL: string = \"getQuestionList\";\n  type: string;\n  role: string;\n  pageTitle: string;\n  pageName: string = 'list';\n  showOptions: boolean = true;\n  notificationCount: number;\n  totalResultCount: number;\n  title: string;\n  unratedQuestion: boolean;\n  unratedMessage: string;\n  params: any = {};\n  boardingType: any;\n  userType: any;\n  selectedFilter: any;\n\n  @ViewChild(Content) content: Content;\n  private _listListener: Subscription = new Subscription();\n  private _roleListener: Subscription = new Subscription();\n  private _notificationListener: Subscription = new Subscription();\n\n\n  constructor(private navCtrl: NavController,\n    private navParams: NavParams,\n    private store: Store<fromStore.AppState>,\n    private loadingController: LoadingController,\n    private popoverCtrl: PopoverController,\n    private dataService: Data) {\n\n    this.unratedQuestion = this.navParams.get('unratedQuestion');\n    this.pageTitle = this.navParams.get('pageTitle');\n    if (this.pageTitle == \"Ask Question\") {\n      this.pageTitle = \"Questions\";\n    } else if (this.pageTitle == undefined || this.pageTitle == null) {\n      this.pageTitle = \"Questions\";\n    } else if (this.pageTitle == \"Ask a Question\") {\n      this.pageTitle = \"Questions\";\n    }\n    this.unratedMessage = this.navParams.get('unratedMessage');\n    this.dataService.getData('loginDetails').then((loginData: any) => {\n      if (loginData.details) {\n        this.userType = loginData.details.userDetails.userType;\n      }\n    })\n  }\n\n  loadQueries(type) {\n\n    if (this.unratedQuestion && this.role == \"associates\") {\n      this.params = {\n        \"role\": this.role,\n        \"start\": this.startList,\n        \"end\": this.endList,\n        \"status\": \"UnRated\"\n      }\n    } else {\n      this.params = {\n        \"role\": this.role,\n        \"start\": this.startList,\n        \"end\": this.endList,\n        \"status\": this.type\n      }\n    }\n\n\n    if (type == 'update') {\n      this.store.dispatch(new fromStore.UpdateQuestionAction(this.currentURL, this.params));\n    }\n    else if (type == \"get\") {\n      this.store.dispatch(new fromStore.GetQuestionAction(this.currentURL, this.params));\n    }\n    else if (type == 'refresh') {\n      this.store.dispatch(new fromStore.ReloadQuestionAction(this.currentURL, this.params));\n    }\n\n    return new Promise<void>(resolve => {\n\n      this._listListener = this.store.select<any>(fromStore.getQuestionState).subscribe(response => {\n\n        if (response.pending == false && response.loadMore == false && response.pullToRefresh == false) {\n\n          if (response.data) {\n            this.items$ = response.data;\n            this.totalResultCount = response.totalResultCount;\n            this.itemsLength = response.data.length;\n          }\n\n          resolve();\n        }\n\n      }, err => {\n      });\n\n    });\n\n  }\n\n  doInfinite(infiniteScroll) {\n\n\n    this.startList = this.itemsLength;\n    this.endList = this.endList + 15;\n    this.loadQueries('update').then(() => {\n      infiniteScroll.complete();\n    });\n\n  }\n\n  presentFilter(myEvent) {\n    let popover = this\n      .popoverCtrl\n      .create('PopoverPage', { 'type': 'filter', 'value': this.type });\n\n\n\n    popover.present({ ev: myEvent });\n\n    popover.onDidDismiss((type) => {\n\n\n\n      if (type) {\n        this.store.dispatch(new fromStore.SetFilter(type))\n        this.type = type;\n        this.startList = 0;\n        this.endList =15;\n\n        this.loadQueries('get').then(() => {\n          this.content.scrollToTop();\n        });\n      }\n\n\n    })\n\n  }\n\n  presentOptions(myEvent) {\n\n    let popover = this\n      .popoverCtrl\n      .create('PopoverPage', { 'type': 'options', userType: this.userType });\n\n    popover.present({ ev: myEvent });\n\n    popover.onDidDismiss((type) => {\n\n      if (type) {\n        this.dataService.saveData('role', type);\n        this.store.dispatch(new fromStore.ResetFilter())\n        this.selectedFilter = null;\n        this.store.dispatch(new fromStore.SetRole(type));\n\n      }\n\n    })\n\n  }\n\n  // doRefresh(refresher) {\n\n\n  //   this.startList = 0;\n\n  //   this.loadQueries('refresh').then(() => {\n  //     refresher.complete();\n  //   });\n\n  // }\n\n  goToPage(page) {\n    if (page == 'SearchPage') {\n      this.navCtrl.push(page, { 'searchType': 'query' });\n    } else if (page == 'NotificationPage') {\n      this.navCtrl.push(page, { 'notificationType': 'QUESTION' });\n    } else {\n      this.navCtrl.push(page);\n    }\n  }\n\n\n  gotToListDetail(item) {\n    this.navCtrl.push('DetailPage', {\n      'id': item.questionId\n    });\n  }\n\n  add() {\n    this.navCtrl.push('AddPage', { 'type': 'addQuestion', 'questionId': null, 'answerType': null });\n  }\n\n  ionViewDidLoad() {\n    //this.store.dispatch(new fromStore.ResetQuestions());\n\n    this.dataService.getData('role').then((data) => {\n      if (data) {\n        this.store.dispatch(new fromStore.SetRole(data));\n      } else {\n        this.store.dispatch(new fromStore.SetRole('associates'));\n\n      }\n    });\n\n    this.loading$ = this.store.select<any>(fromStore.getAllQuestionsLoading);\n\n  }\n\n  ionViewWillEnter() {\n\n\n    this.store.select<any>(fromStore.getFilter).subscribe((filter) => {\n      if (filter) {\n        this.selectedFilter = filter;\n      }\n\n    })\n\n    this.dataService.getData('miscData').then((res: any) => {\n\n      this._roleListener = this.store.select<any>(fromStore.getRole).subscribe((selectedRole) => {\n\n        if (selectedRole == 'associate') {\n          if (this.selectedFilter) {\n            this.type = this.selectedFilter\n          } else {\n            this.type = res.associatesQuestionStatusList[0].value;\n          }\n\n        } else if (selectedRole == 'admin') {\n\n          if (this.selectedFilter) {\n            this.type = this.selectedFilter\n          } else {\n            this.type = res.adminQuestionStatusList[0].value;\n          }\n\n        } else if (selectedRole == 'hr') {\n\n          if (this.selectedFilter) {\n            this.type = this.selectedFilter\n          } else {\n            this.type = res.hrQuestionStatusList[0].value;\n          }\n\n        } else {\n\n          if (this.selectedFilter) {\n            this.type = this.selectedFilter\n          } else {\n            this.type = res.questionStatusList[0].value;\n          }\n\n\n        }\n\n        if (selectedRole) {\n\n          if (selectedRole == 'admin' || selectedRole == 'hr') {\n            this.showOptions = true;\n            this.title = '';\n          } else {\n            this.showOptions = false;\n            this.title = '';\n          }\n\n          this.role = selectedRole;\n\n          this.startList = 0;\n\n          this.loadQueries('get').then(() => {\n            //this.content.scrollToTop(); \n          });\n\n        }\n\n        //assign current selected filter type\n\n\n      });\n\n    })\n\n    this.getNotificationCount();\n\n  }\n\n  getNotificationCount() {\n    this._notificationListener = this.store.select<any>(fromStore.getNotificationCount).subscribe((res) => {\n      this.notificationCount = res;\n    });\n  }\n\n\n\n  ionViewWillLeave() {\n    this._listListener.unsubscribe();\n    this._roleListener.unsubscribe();\n    this._notificationListener.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/questions/questions.ts"],"sourceRoot":""}
{"version":3,"sources":["../../src/container/gatepass/gatepass.module.ts","../../src/container/gatepass/gatepass.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACN;AAC4B;AACvB;AAY/C;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAX9B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+DAAY;aAEb;YACD,OAAO,EAAE;gBACP,uFAAgB;gBAChB,qEAAY;gBACZ,sEAAe,CAAC,QAAQ,CAAC,+DAAY,CAAC;aACvC;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBmB;AACiD;AAClB;AACxB;AAEF;AAQvD;IAKE,sBAAoB,OAAwB,EAAU,YAA0B,EAAU,QAAmB,EAAU,SAA0B,EAAU,UAAsB,EAAU,QAAkB,EAAU,OAAqB;QAAxN,YAAO,GAAP,OAAO,CAAiB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,YAAO,GAAP,OAAO,CAAc;QAJpO,gBAAW,GAAY,KAAK,CAAC;QAKnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACnD,CAAC;IACD,+BAAQ,GAAR;IAEA,CAAC;IACD,wCAAiB,GAAjB;QACE,gIAAgI;QAChI,0BAA0B;QAC1B,MAAM;QACN,6BAA6B;QAC7B,4EAA4E;QAC5E,MAAM;QAEN,mBAAmB;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;IACzG,CAAC;IAED,gCAAS,GAAT,UAAU,IAAI;QACZ,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;SACrC;IAEH,CAAC;IAED,sCAAe,GAAf,UAAgB,IAAI;QAApB,iBAkBC;QAjBC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,qBAAW;gBAC5C,IAAI,WAAW,EAAE;oBACf,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;iBAC9B;qBAAM;oBACL,KAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC;iBACzC;YAEH,CAAC,CAAC;iBACC,KAAK,CAAC;gBACL,KAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC;YAC1C,CAAC,CAAC;SACL;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC9B;IAGH,CAAC;IAhDU,YAAY;QAJxB,gEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;qBAM4O;OALjO,YAAY,CAoDxB;IAAD,CAAC;AAAA;SApDY,YAAY,e","file":"104.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { GatePassPage } from './gatepass';\nimport { ComponentsModule } from '../../components/components.module';\nimport { CommonModule } from '@angular/common';\n@NgModule({\n  declarations: [\n    GatePassPage,\n    // CovidInformationComponent\n  ],\n  imports: [\n    ComponentsModule,\n    CommonModule,\n    IonicPageModule.forChild(GatePassPage),\n  ],\n})\nexport class GatePassPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/gatepass/gatepass.module.ts","import { Component, OnInit } from '@angular/core';\nimport { IonicPage, ViewController, NavParams, NavController, ModalController, Platform } from \"ionic-angular\"\nimport { CommonUtilities } from '../../providers/commonUtilities/commonUtilities'\nimport { HttpProvider } from '../../providers/http/http';\nimport { GatePassCheckComponent } from '../../components/gatepass-check/gatepass-check';\nimport { BrowserTab } from '@ionic-native/browser-tab';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-gatepass',\n  templateUrl: 'gatepass.html',\n})\nexport class GatePassPage implements OnInit {\n  private isShowCheck: boolean = false;\n\n  private userData;\n  private userDetails: any;\n  constructor(private utility: CommonUtilities, private httpProvider: HttpProvider, private navParam: NavParams, private modalCtrl: ModalController, private browserTab: BrowserTab, private platform: Platform, private navctrl:NavController) {\n    this.userData = this.navParam.get('userDetails');\n  }\n  ngOnInit() {\n\n  }\n  goTogatepassCheck() {\n    // let modal = this.modalCtrl.create(GatePassCheckComponent, { 'userid': this.userData.userId, 'userDetails': this.userData }, {\n    //   cssClass: 'infoModal'\n    // });\n    // modal.onDidDismiss(() => {\n    //   // this.navCtrl.push(\"GatePassPage\", { 'userDetails': this.userData });\n    // });\n\n    // modal.present();\n  this.navctrl.push(\"ReturnToOfficePage\", { 'userid': this.userData.userId, 'userDetails': this.userData })\n  }\n\n  formateDT(data) {\n    if (data) {\n      return this.utility.formatDate(data)\n    }\n\n  }\n\n  openPdfDocument(data) {\n    if (this.platform.is('ios')) {\n      this.browserTab.isAvailable().then(isAvailable => {\n        if (isAvailable) {\n          this.browserTab.openUrl(data)\n        } else {\n          this.utility.openWithSystemBrowser(data)\n        }\n\n      })\n        .catch(() => {\n          this.utility.openWithSystemBrowser(data)\n        })\n    } else {\n      this.utility.openAsset(data);\n    }\n\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/gatepass/gatepass.ts"],"sourceRoot":""}
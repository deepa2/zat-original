{"version":3,"sources":["../../src/container/rto-questionnaries/rto-questionnaries.module.ts","../../src/container/rto-questionnaries/rto-questionnaries.ts"],"names":[],"mappings":"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","file":"86.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RtoQuestionnariesPage } from './rto-questionnaries';\n\n@NgModule({\n  declarations: [\n    RtoQuestionnariesPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RtoQuestionnariesPage),\n  ],\n})\nexport class RtoQuestionnariesPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/rto-questionnaries/rto-questionnaries.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams,AlertController } from 'ionic-angular';\nimport { CommonUtilities } from '../../providers/commonUtilities/commonUtilities';\nimport { HttpProvider } from '../../providers/http/http';\n\n/**\n * Generated class for the RtoQuestionnariesPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-rto-questionnaries',\n  templateUrl: 'rto-questionnaries.html',\n})\nexport class RtoQuestionnariesPage {\n\n  private questionsList: any;\n  private answerList = [];\n  private isDisabled: boolean = true;\n  private isEligibleForOffice: boolean = true;\n  constructor(public navCtrl: NavController, public navParams: NavParams, private httpProvider: HttpProvider, private utilities: CommonUtilities,private alertCtrl:AlertController) {\n\n  }\n\n  ionViewDidLoad() {\n    this.utilities.updateLoader(true);\n    let data = {\n      url: 'covidSurveyQuestions',\n      data: {},\n      miscellaneous: true\n    }\n\n    this.httpProvider.http.commonService(data).subscribe((response: any) => {\n      this.utilities.consoleLog(response);\n      if (response && response.details) {\n        this.utilities.updateLoader(false);\n        this.questionsList = response.details.questionDOList;\n      }\n    },\n      error => {\n        this.utilities.updateLoader(false);\n      })\n\n  }\n\n  selectAnswer(wholedata, answers) {\n\n    if (this.answerList.length == 0) {\n      wholedata.selectedAnswer = answers\n      this.answerList.push(wholedata);\n    } else {\n      if (this.answerList.indexOf(wholedata) == -1) {\n        wholedata.selectedAnswer = answers\n        this.answerList.push(wholedata);\n      } else if (this.answerList.indexOf(wholedata) != -1) {\n        this.answerList.filter(data => {\n          if (data.questionId == wholedata.questionId) {\n            data.selectedAnswer = answers;\n          }\n        })\n      }\n\n\n    }\n\n    if (this.questionsList.length == this.answerList.length) {\n      // this.answerList.filter(data => {\n      //   if (data.selectedAnswer.answer == 'Yes') {\n      //     this.isEligibleForOffice = false;\n      //   }\n      // })\n      this.isDisabled = false\n\n    }\n    console.log(this.answerList);\n  }\n\n\n  submitQuestionnnaires() {\n    let submit;\n    if (this.questionsList.length == this.answerList.length) {\n      this.answerList.filter(data => {\n        if (data.selectedAnswer.answer == 'Yes') {\n          this.isEligibleForOffice = false;\n        }\n      })\n      this.isDisabled = false\n\n    }\n    submit = this.answerList.map(data => {\n      const submitAnswers: any = {};\n      submitAnswers.questionId = data.questionId;\n      submitAnswers.answerId = data.selectedAnswer.answerId;\n      return submitAnswers;\n    })\n    console.log(submit);\n    this.utilities.updateLoader(true);\n    let data = {\n      url: 'submitCovidQA',\n      data: submit,\n      miscellaneous: true\n    }\n\n\n    this.httpProvider.http.commonService(data).subscribe((response: any) => {\n      console.log(response)\n      this.utilities.updateLoader(false);\n      if(this.isEligibleForOffice){\n        // this.utilities.alert(\"You are Eligible to come to office\",\"Hello\").then(()=>{\n        //   this.navCtrl.pop();\n        //})\n        this.presentAlert(\"You meet the criteria to go to office.<br><br>Thank-you for submitting the Return to Office (RTO) Declaration & policy agreement. <br>Please adhere to the RTO policy and obligations in the Declaration, to ensure a safe working environment for yourself and your colleagues.\").then(()=>{\n          this.navCtrl.popToRoot();\n        })\n      }else{\n        this.presentAlert(\"You do not meet the criteria to go to office.<br><br>Thank-you for submitting the Return to Office (RTO) Declaration & policy agreement. <br>Please adhere to the RTO policy and obligations in the Declaration, to ensure a safe working environment for yourself and your colleagues.\").then(()=>{\n          this.navCtrl.popToRoot();\n        })\n      }\n    },\n      (error) => {\n        this.utilities.updateLoader(false);\n      }\n    )\n  }\n\n\n  presentAlert(message, title = '') {\n\n    return new Promise<void>(resolve => {\n        let alert = this.alertCtrl.create({\n            enableBackdropDismiss: false,\n            //title: `<div class=\"RTO-US-questions-title\"><img src=\"assets/imgs/RTO-send.svg\"> <span> Thank You </span></div> `,\n            title: `<div class=\"RTO-US-questions-title\"> <span> Thank You </span></div> `,\n            message: message,\n            cssClass: \"customizedAlertRTO\",\n            buttons: [\n                {\n                    text: 'OK',\n                    handler: () => {\n                        resolve();\n                    }\n                }\n            ]\n        });\n        alert.present();\n    })\n\n}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/rto-questionnaries/rto-questionnaries.ts"],"sourceRoot":""}
{"version":3,"sources":["../../src/container/zents/dashboard/report-type/report-type.module.ts","../../src/container/zents/dashboard/report-type/report-type.ts"],"names":[],"mappings":"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","file":"34.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ReportTypePage } from './report-type';\nimport { ComponentsModule } from '../../../../components/components.module';\n\n@NgModule({\n  declarations: [\n    ReportTypePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ReportTypePage),\n    ComponentsModule\n  ],\n})\nexport class ReportTypePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zents/dashboard/report-type/report-type.module.ts","import { Component, SimpleChanges } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ModalController } from 'ionic-angular';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ReportTsStatusModalComponent } from '../../../../components/reportTS/report-ts-status-modal/report-ts-status-modal';\nimport { ReportTsAssociateListModalComponent } from '../../../../components/reportTS/report-ts-associateList-modal/report-ts-associateList-modal';\n\n/**\n * Generated class for the ReportTypePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-report-type',\n  templateUrl: 'report-type.html',\n})\nexport class ReportTypePage\n{\n\n  params: any;\n  private reportNA: boolean = false;\n  private dates: any = {};\n  private datesFromServer: any = {}\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private fb: FormBuilder, private modalController: ModalController)\n  {\n    this.params = this.navParams.get('reportType');\n    this.datesFromServer = this.navParams.get('datesFromServer');\n    // console.log(this.params)\n    // let curDateMonth = new Date();\n    // this.dates = {\n    //   startDate: `${curDateMonth.getFullYear()}-${(\"0\" + curDateMonth.getMonth()).slice(-2)}-${(\"0\" + curDateMonth.getDate()).slice(-2)}`,\n    //   endDate: `${curDateMonth.getFullYear()}-${(\"0\" + (curDateMonth.getMonth() + 1)).slice(-2)}-${(\"0\" + curDateMonth.getDate()).slice(-2)}`,\n    // }\n    // let convertedStartDate = curDateMonth.setDate(curDateMonth.getMonth() - 1);\n    // this.dates.currentMonth = new Date(convertedStartDate).toISOString();\n\n    let curDateMonth = new Date();\n    this.dates = {\n      startDate: this.datesFromServer.weekSatrtDate,\n      endDate: this.datesFromServer.weekEndDate,\n    }\n\n    // let convertedStartDate = curDateMonth.setDate(curDateMonth.getMonth() - 1);\n    // this.dates.currentMonth = new Date(convertedStartDate).toISOString();\n\n\n  }\n\n  _getStartDate(event: any)\n  {\n    // let getStartDate = new Date(event.year, event.month, event.day + 2);\n    // let convertedStartDate = getStartDate.setDate(getStartDate.getDate());\n    // this.dates.endDate = new Date(convertedStartDate).toISOString();\n    let date1: any = new Date(`${event.year}-${event.month}-${event.day}`);\n    let date2: any = new Date(this.dates.endDate);\n    let diffTime: any = Math.abs(date2 - date1);\n    let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    // console.log(diffTime + \" milliseconds\");\n    let getStartDate = new Date(event.year, event.month - 1, event.day);\n    // let convertedStartDate = getStartDate.setDate(getStartDate.getDate());\n    // console.log(convertedStartDate)\n    let endDate = new Date(getStartDate);\n    // var today = new Date(this.datesFromServer.weekEndDate);\n    // today.setHours(0, 0, 0, 0);\n    // if (!(endDate > today)) {\n    //   this.dates.endDate = endDate.toISOString()\n    // } else {\n    //   this.dates.endDate = this.datesFromServer.weekEndDate\n    // }\n\n    if (diffDays > 30)\n    {\n      this.reportNA = true\n    } else\n    {\n      this.reportNA = false\n    }\n  }\n\n  _getEndDate(event: any)\n  {\n    let date1: any = new Date(this.dates.startDate);\n    let date2: any = new Date(`${event.year}-${event.month}-${event.day}`);\n    let diffTime: any = Math.abs(date2 - date1);\n    let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays > 30)\n    {\n      this.reportNA = true\n    } else\n    {\n      this.reportNA = false\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zents/dashboard/report-type/report-type.ts"],"sourceRoot":""}
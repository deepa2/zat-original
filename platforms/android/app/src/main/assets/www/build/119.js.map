{"version":3,"sources":["../../src/container/about/about.module.ts","../../src/container/about/about.ts"],"names":[],"mappings":"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","file":"119.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AboutPage } from './about';\n\n@NgModule({\n  declarations: [\n    AboutPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AboutPage),\n  ],\n})\nexport class AboutPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/about/about.module.ts","import { Component, } from \"@angular/core\";\nimport { IonicPage, NavParams, Events, Platform } from \"ionic-angular\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { AppVersion } from \"@ionic-native/app-version\";\nimport { CommonUtilities } from '../../providers/commonUtilities/commonUtilities'\nimport { Constants } from \"@app/constants\";\nimport * as fromStore from \"@app/store\";\n\n@IonicPage()\n@Component({\n  selector: \"page-about\",\n  templateUrl: \"about.html\"\n})\nexport class AboutPage {\n  loading$: Observable<any>;\n  private _aboutListener: Subscription = new Subscription();\n  private about: any;\n  private url: string = \"getHTMLParagraph\";\n  private appName: string = \"\";\n  private versionNumber: any = \"\";\n  private pageType: string;\n\n  constructor(\n    private navParams: NavParams,\n    private store: Store<fromStore.AppState>,\n    private appVersion: AppVersion,\n    private utility: CommonUtilities,\n    private events: Events\n) { }\n\n  //on Page load, ionic executes this function and all the initialization methods executes here\n   ionViewDidLoad() {\n    this.pageType = this.navParams.get('type');\n    this.appName = Constants.appName;\n    this.appVersion.getVersionNumber().then(res => {\n      this.versionNumber = res;\n    });\n    \n    this.getData();\n    this.loading$ = this.store.select<any>(fromStore.getAboutLoading);\n    this.events.subscribe('hide-loader', (data: any) => {\n      this.utility.updateLoader(false)\n      //console.log('Hide loader')\n    })\n  }\n\n  ionViewWillLeave() {\n    this._aboutListener.unsubscribe();\n  }\n\n  //get about data from server\n  getData() {\n    //if device platform available \n    if (this.utility.platformAvailable()) {\n      this.utility.updateLoader(true);\n      this.appVersion.getVersionNumber().then((response: any) => {\n        let params = { 'type': this.pageType, 'versionNo': response }\n        this.store.dispatch(new fromStore.GetAboutAction(this.url, params));\n        return new Promise(resolve => {\n          this._aboutListener = this.store\n            .select<any>(fromStore.getAboutState)\n            .subscribe(\n              response => {\n                if (response) {\n                  if (response.pending == false) {\n                    this.about = response.data;\n                    this.utility.updateLoader(response.pending)\n                    resolve();\n                  }\n                }\n              },\n              err => {\n                this.utility.updateLoader(false)\n              }\n            );\n        });\n      })\n    } //else, for desktop browser\n    else {\n      this.utility.updateLoader(true);\n      let params = { 'type': this.pageType, 'versionNo': Constants.new_version }\n      this.store.dispatch(new fromStore.GetAboutAction(this.url, params));\n      return new Promise(resolve => {\n        this._aboutListener = this.store\n          .select<any>(fromStore.getAboutState)\n          .subscribe(\n            response => {\n              if (response) {\n                if (response.pending == false) {\n                  this.about = response.data;\n                  this.utility.updateLoader(response.pending)\n                  resolve();\n                }\n              }\n            },\n            err => {\n              this.utility.updateLoader(false)\n            }\n          );\n      });\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/about/about.ts"],"sourceRoot":""}
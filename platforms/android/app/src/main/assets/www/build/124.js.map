{"version":3,"sources":["../../src/container/ZenLearn/team-list-detail/team-list-detail.module.ts","../../src/container/ZenLearn/team-list-detail/team-list-detail.ts"],"names":[],"mappings":"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","file":"124.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TeamListDetailPage } from './team-list-detail';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { NgCircleProgressModule } from 'ng-circle-progress';\n\n\n@NgModule({\n  declarations: [\n    TeamListDetailPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TeamListDetailPage),\n    ComponentsModule,\n    NgCircleProgressModule,\n  ],\n})\nexport class TeamListDetailPageModule  { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/ZenLearn/team-list-detail/team-list-detail.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, PopoverController, ModalController } from 'ionic-angular';\nimport { CommonUtilities } from '../../../providers/commonUtilities/commonUtilities';\nimport { ViewController } from 'ionic-angular/navigation/view-controller';\nimport{HttpProvider} from '../../../providers/http/http';\nimport { DapPopoverPage } from '../dap-popover/dap-popover';\n@IonicPage()\n@Component({\n  selector: 'team-list-detail',\n  templateUrl: 'team-list-detail.html',\n})\nexport class TeamListDetailPage {\n    private pageTitle: string;\n    private userId: number;\n    private role :string;\n    private teamData:any={};\n    private dapData:any=[];\n    private selectedTab = 0;\n    private showAllFilters: boolean;\n    private filteredData: any;\n    private flowStatus = \"In-progress,Completed,Approved,Manager Rejected,Pending Manager Approval,Pending For Manager Review,Mentor Rejected,Not Approved\";\n    private learningType = \"Technical,Behavioural\"\n \n  constructor(private viewCtrl: ViewController,private utilities: CommonUtilities, private modalCtrl: ModalController, \n    private navCtrl: NavController, private navParams: NavParams, private popoverCtrl: PopoverController,private httpProvider:HttpProvider,\n    ) {\n      this.userId = navParams.get(\"userId\")\n      this.role = navParams.get(\"role\")\n      \n  }\n  ngOnInit() {\n  //  Retriving Team List data\n   // this.getTeamListData();\n   // this.getDapListData(this.learningType, this.flowStatus)\n  }\n  ionViewWillEnter() {\n    this.filteredData = \"\";\n    this.getTeamListData();\n    this.getDapListData(this.learningType, this.flowStatus)\n  }\n\n  \n  getTeamListData() {\n    \n    this.utilities.updateLoader(true);\n    let data={\n      url: 'specificAssociateDetails',\n      data:{\n        'associateId':  this.userId\n      },\n      zenLearn: true\n    }\n    this.httpProvider.http.commonService(data).subscribe((response:any)=>{\n      ////console.log(response);\n      if(response.details){\n        this.utilities.updateLoader(false);\n        this.teamData = response.details.responseList;\n      }\n      \n    },\n    error=>{\n      this.utilities.updateLoader(false);\n      ////console.log(error)\n    })\n  }\n\n  // Get My Dap Data\n  getDapListData(learningType, flowStatus) {\n   \n    this.utilities.updateLoader(true);\n    let data={\n      url: 'getMyDapsList',\n      data:{\n        \"userId\" : this.userId,\n        \"flowStatus\" : flowStatus,\n        \"learningType\" : learningType\n    },\n      zenLearn: true\n    }\n    this.httpProvider.http.commonService(data).subscribe((response:any)=>{\n      //console.log(response);\n      if(response.details){\n        this.utilities.updateLoader(false);\n        this.dapData = response.details.responseList;\n      }\n      \n    },\n    error=>{\n      this.utilities.updateLoader(false);\n      //console.log(error)\n    })\n  }\n// Filter Popup\npresentPopover(myEvent) {\n  let filteredData: any = this.filteredData\n  const popover = this.popoverCtrl.create(DapPopoverPage, { data: { filteredData: filteredData, showAllFilters: this.showAllFilters } }, { cssClass: 'zenLearn-popover' });\n  popover.present({\n    ev: myEvent\n  });\n\n  popover.onDidDismiss(data => {\n    if (!this.utilities.isEmptyOrNullOrUndefined(data)) {\n      this.filteredData = data;\n      let learningType: any = []\n      let flowStatus: any = []\n      data.filterArray.learningType.forEach(element => {\n        if (element.checked == true)\n          learningType.push(element.value)\n\n      });\n      data.filterArray.flowStatus.forEach(element => {\n        if (element.checked == true)\n        flowStatus.push(element.value)\n\n      });\n      \n\n      learningType = learningType.toString()\n      flowStatus = flowStatus.toString()\n      this.getDapListData(learningType, flowStatus)\n    }\n  })\n}\n  // Method for selecting Tab\n  // selectTab(activeTab){\n  //   this.selectedTab = activeTab\n  //   if(this.dapData!=null && this.teamData != {}){\n  //     if(activeTab==0 && this.teamData.userId==undefined){\n  //       this.getTeamListData()\n  //     }else if(activeTab==1 && this.dapData.length==0){\n  //       this.getDapListData(this.learningType, this.flowStatus)\n  //     }\n  //   }\n    \n  // }\n  // Method for redirecting to dap page\n  goToDapPage(dapItem){\n    let selectedDap = {\n      role :this.role,\n      data:dapItem\n    }\n    this.navCtrl.push(\"DapDetailPage\",{'viewDapDetails':selectedDap, isAssociateDataAvailable:this.teamData.userId})\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/ZenLearn/team-list-detail/team-list-detail.ts"],"sourceRoot":""}
{"version":3,"sources":["../../src/container/zen-admin/add-new-pass/add-new-pass.module.ts","../../src/container/zen-admin/add-new-pass/add-new-pass.ts"],"names":[],"mappings":"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","file":"78.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddNewPassPage } from './add-new-pass';\n\n@NgModule({\n  declarations: [\n    AddNewPassPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddNewPassPage),\n  ],\n})\nexport class AddNewPassPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zen-admin/add-new-pass/add-new-pass.module.ts","import { BusRulesModalComponent } from \"./../../../components/zenadmin/bus-rules-modal/bus-rules-modal\";\nimport { HttpProvider } from \"./../../../providers/http/http\";\nimport { CommonUtilities } from \"./../../../providers/commonUtilities/commonUtilities\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { Component } from \"@angular/core\";\nimport { IonicPage, NavController, NavParams, ModalController } from \"ionic-angular\";\nimport * as moment from \"moment\";\n\n/**\n * Generated class for the AddNewPassPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: \"page-add-new-pass\",\n  templateUrl: \"add-new-pass.html\",\n})\nexport class AddNewPassPage {\n  private passForm: FormGroup;\n  private shuttleForm: FormGroup;\n  private busTypeList: any;\n  private busDetails: any;\n  private startDate: any;\n  private passType: any;\n  private routeList: any;\n  private pickupPointList: any;\n  private selectedPickupPtDetails: any;\n  private pickupPointNames: Array<any> = [];\n  private selectedAssociateList: Array<any> = [];\n  private commentData: string = \"\";\n  private isPassSubmitted: boolean = false;\n  private successMsg: any;\n  private checkBoxValue: boolean = false;\n  private currentDate: any;\n  private dailyPassType: any;\n  private dailyPassOptions: any = [];\n  private futureYear: any;\n  private endDate: any;\n  private submitted = false;\n  private isSeatAvailable: boolean;\n  private passReqType: any;\n  private passSuccessData: any = {};\n  private isNonZensarian: any = false;\n  private nonZensarianID: any;\n  private isDailyPassAllowed: boolean = false;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private formBuilder: FormBuilder,\n    private utility: CommonUtilities,\n    private httpProvider: HttpProvider,\n    private modalCtrl: ModalController\n  ) {\n\n    if (!this.utility.isEmptyOrNullOrUndefined(this.navParams.get(\"passReqType\"))) {\n      this.passReqType = this.navParams.get(\"passReqType\");\n    }\n    if (!this.utility.isEmptyOrNullOrUndefined(this.navParams.get(\"isNonZensarian\"))) {\n      this.isNonZensarian = this.navParams.get(\"isNonZensarian\") || false;\n    }\n\n    if (!this.utility.isEmptyOrNullOrUndefined(this.navParams.get(\"nonZensarianID\"))) {\n      this.nonZensarianID = this.navParams.get(\"nonZensarianID\");\n    }\n  }\n\n  ionViewDidLoad() { }\n\n  ngOnInit() {\n    this.currentDate = moment().format(\"YYYY-MM-DD\")\n    //generating controls for pass form \n    this.passForm = this.formBuilder.group({\n      startDate: [{ value: \"\", disabled: true }, Validators.required],\n      passType: [{ value: \"\", disabled: false }, Validators.required],\n      routeName: [{ value: \"\", disabled: true }, Validators.required],\n      pickupPoint: [{ value: \"\", disabled: true }, Validators.required],\n      arrivalTime: [{ value: \"\", disabled: true }],\n      comments: [{ value: \"\", disabled: false }],\n      dailypassType: [\"\"],\n    },\n      { validator: this.formValidator }\n    );\n\n    //generating controls for shuttle form \n    this.shuttleForm = this.formBuilder.group({\n      startDate: [{ value: \"\", disabled: true }, Validators.required],\n      passType: [{ value: \"\", disabled: false }, Validators.required],\n      routeName: [{ value: \"\", disabled: true }, Validators.required],\n      pickupPoint: [{ value: \"\", disabled: true }, Validators.required],\n      dailypassType: [\"\"],\n    },\n      { validator: this.shuttleformValidator }\n    );\n\n    this.getBusPassTypeList();\n    this.getRouteList();\n\n  }\n\n  /**\n   * Service call for bustype(Daily,Weekly,Monthly)\n   */\n  getBusPassTypeList() {\n    this.utility.updateLoader(true);\n\n    this.httpProvider.http.commonService({\n      url: \"getBusPassTypeList\", data: { transportType: this.passReqType }, isZenAdmin: true\n    }).subscribe((response) => {\n      if (response) {\n        this.utility.updateLoader(false);\n        if (!this.utility.isEmptyOrNullOrUndefined(response[\"data\"])) {\n          this.busTypeList = response[\"data\"];\n          this.busDetails = response[\"data\"].busPassDetailDO;\n        }\n      }\n    }, (error) => {\n      this.utility.updateLoader(false);\n    });\n  }\n\n  /**\n   * Service call for daily bus passtype(Pickup,Drop,Pickup&Drop)\n   */\n  getDailyBusPassList() {\n    this.utility.updateLoader(true);\n\n    this.httpProvider.http.commonService({ url: \"getBusPassSubTypeList\", data: { transportType: this.passReqType, passType: this.passType }, isZenAdmin: true })\n      .subscribe((response) => {\n        if (response) {\n          this.utility.updateLoader(false);\n          if (!this.utility.isEmptyOrNullOrUndefined(response[\"data\"])) {\n            this.dailyPassOptions = response[\"data\"];\n          }\n        }\n      }, (error) => {\n        this.utility.updateLoader(false);\n      });\n  }\n\n  /**\n  * Handles pass type change event\n  @param passType selected passtype\n  */\n  onPassTypeChange(passType) {\n    // if passtype is daily get daily pass type list\n    if (passType == \"Daily\") {\n      this.getDailyBusPassList();\n    }\n    // calculating future dates for which pass can be aaplied for\n    if (passType == \"Monthly\" || passType == \"Daily\" || passType == \"Weekly\") {\n      // calculating dates for only current year\n      var now = moment(new Date(), \"DD-MM-YYYY\");\n      var month = now.format('M');\n      var year = now.format('YYYY');\n      if (parseInt(month) != 12) {\n        this.endDate = moment().endOf(\"year\").format(\"YYYY-MM-DD\");\n      } else {\n        // if current month is December then show January month date\n        var newDate = `${parseInt(year) + 1}-01-31`;\n        this.endDate = moment(newDate.toString()).format(\"YYYY-MM-DD\");\n      }\n    }\n    // if pass type is changed then reset route name,arrival time \n    if (this.passForm.get(\"routeName\").enabled) {\n      this.passForm.get(\"routeName\").reset();\n      this.passForm.get(\"arrivalTime\").reset();\n    }\n    if (this.passForm.get(\"pickupPoint\").enabled) {\n      this.passForm.get(\"pickupPoint\").reset();\n      this.passForm.get(\"arrivalTime\").reset();\n    }\n    if (this.shuttleForm.get(\"routeName\").enabled) {\n      this.shuttleForm.get(\"routeName\").reset();\n    }\n    if (this.shuttleForm.get(\"pickupPoint\").enabled) {\n      this.shuttleForm.get(\"pickupPoint\").reset();\n    }\n    if (!this.utility.isEmptyOrNullOrUndefined(passType)) {\n      this.passForm.controls.startDate.enable();\n      this.shuttleForm.controls.startDate.enable();\n    }\n  }\n\n  /**\n  * Handles date change event\n  @param date selected date\n  */\n  onDateChange(date) {\n    // enable route name after date is selected\n    if (!this.utility.isEmptyOrNullOrUndefined(date) && this.passReqType == \"bus\") {\n      this.passForm.controls.routeName.enable();\n    }\n\n    if (this.passReqType == \"bus\") {\n      // reset values on date change-for bus pass\n      if (!this.utility.isEmptyOrNullOrUndefined(this.passForm.get(\"pickupPoint\").value)) {\n        this.passForm.get(\"pickupPoint\").reset();\n        this.passForm.get(\"arrivalTime\").reset();\n      }\n      if (!this.utility.isEmptyOrNullOrUndefined(this.passForm.get(\"routeName\").value)) {\n        this.passForm.get(\"routeName\").reset();\n      }\n    }\n    // reset values on date change-for shuttle pass\n    if (!this.utility.isEmptyOrNullOrUndefined(date) && this.passReqType == \"shuttle\") {\n      this.shuttleForm.controls.routeName.enable();\n    }\n    if (this.passReqType == \"shuttle\") {\n      if (!this.utility.isEmptyOrNullOrUndefined(this.passForm.get(\"pickupPoint\").value)) {\n        this.shuttleForm.get(\"pickupPoint\").reset();\n      }\n      if (!this.utility.isEmptyOrNullOrUndefined(this.passForm.get(\"routeName\").value)) {\n        this.shuttleForm.get(\"routeName\").reset();\n      }\n    }\n  }\n\n  /**\n * Service call for route list-List of all the available routes\n */\n  getRouteList() {\n    this.utility.updateLoader(true);\n    this.httpProvider.http.commonService({ url: \"getBusRouteList\", data: { transportType: this.passReqType }, isZenAdmin: true })\n      .subscribe((response) => {\n        if (response) {\n          this.utility.updateLoader(false);\n          if (!this.utility.isEmptyOrNullOrUndefined(response[\"data\"])) {\n            this.routeList = response[\"data\"];\n          }\n        }\n      }, (error) => {\n        this.utility.updateLoader(false);\n      });\n  }\n\n  /**\n  * Handles route change event\n  @param routeName selected route name\n  */\n  onRouteChange(routeName) {\n    // reset values if route name is changed\n    if (this.passForm.get(\"pickupPoint\").enabled) {\n      this.passForm.get(\"pickupPoint\").reset()\n      this.passForm.get(\"arrivalTime\").reset()\n    }\n    if (!this.utility.isEmptyOrNullOrUndefined(routeName) && this.passReqType == \"bus\") {\n      // service call to get route summary details\n      this.getBusPassSummaryByRoute();\n      // enabling pickup point control only after getting pickup point lists through getBusPassSummaryByRoute method\n      this.passForm.controls.pickupPoint.enable();\n    } else if (!this.utility.isEmptyOrNullOrUndefined(routeName) && this.passReqType == \"shuttle\") {\n      this.getBusPassSummaryByRoute();\n      this.shuttleForm.controls.pickupPoint.enable();\n    }\n  }\n\n  /**\n  * Handles pickup point change event\n  @param pickupPt selected pickup point\n  */\n  onPickUpPtChange(pickupPt) {\n    this.selectedPickupPtDetails = \"\";\n    if (!this.utility.isEmptyOrNullOrUndefined(pickupPt)) {\n      // returns selected pickup point detail and stores in selectedPickupPtDetails variable\n      this.selectedPickupPtDetails = this.pickupPointList.find((item) => {\n        if (item.pickupPointName == pickupPt) {\n          return item;\n        }\n      });\n      // set the arrival time for the selected pickup point\n      if (this.passReqType == \"bus\")\n        this.passForm.get(\"arrivalTime\").setValue(this.selectedPickupPtDetails.arrivalTime);\n\n      this.checkSeatAvailability(this.selectedPickupPtDetails.availableSeat);\n    }\n  }\n\n  /**\n   * Service call to retreive route details like cost,seats availablity and pickup points.\n   * Called only after user has selected start date,route name and pass type\n   */\n  getBusPassSummaryByRoute() {\n    this.pickupPointList = \"\";\n    this.pickupPointNames = [];\n    let home;\n    this.utility.updateLoader(true);\n    if (this.passReqType == \"bus\") {\n      home = {\n        url: \"getBusPassSummaryByRoute\",\n        data: {\n          routeName: this.passForm.get(\"routeName\").value,\n          passType: this.passForm.get(\"passType\").value,\n          startDate: this.passForm.get(\"startDate\").value,\n          transportType: this.passReqType,\n          passSubType: this.passType.toLowerCase() == 'daily' ? this.passForm.get(\"dailypassType\").value : ''\n\n        },\n        isZenAdmin: true,\n      };\n    }\n    if (this.passReqType == \"shuttle\") {\n      home = {\n        url: \"getBusPassSummaryByRoute\",\n        data: {\n          routeName: this.shuttleForm.get(\"routeName\").value,\n          passType: this.shuttleForm.get(\"passType\").value,\n          startDate: this.shuttleForm.get(\"startDate\").value,\n          transportType: this.passReqType,\n          passSubType: this.passType.toLowerCase() == 'daily' ? this.shuttleForm.get(\"dailypassType\").value : '',\n        },\n        isZenAdmin: true,\n      };\n    }\n    this.httpProvider.http.commonService(home).subscribe((response: any) => {\n      if (response) {\n        this.utility.updateLoader(false);\n        if (!this.utility.isEmptyOrNullOrUndefined(response[\"data\"]) &&\n          response.status[\"statusCode\"] == \"1\") {\n          this.pickupPointList = response[\"data\"];\n          this.pickupPointList.forEach((item) => {\n            this.pickupPointNames.push(item.pickupPointName);\n          });\n          console.log(\"pickupPointNames\",this.pickupPointNames)\n\n        }\n      }\n    }, (error) => {\n      this.utility.updateLoader(false);\n    });\n  }\n\n  /**\n    * Service call for applying pass for Bus\n    */\n  submitPass() {\n    this.utility.updateLoader(true);\n    this.httpProvider.http.commonService({\n      url: \"applyBusPass\",\n      data: {\n        startDate: this.passForm.get(\"startDate\").value,\n        passType: this.passForm.get(\"passType\").value,\n        routeName: this.passForm.get(\"routeName\").value,\n        pickupPointName: this.passForm.get(\"pickupPoint\").value,\n        arrivalTime: this.passForm.get(\"arrivalTime\").value,\n        comments: this.passForm.get(\"comments\").value,\n        isNonZensarian: this.isNonZensarian,\n        transportType: this.passReqType,\n        dailyPassType: this.passForm.get(\"dailypassType\").value,\n        userId: this.isNonZensarian ? this.nonZensarianID : null\n      },\n      isZenAdmin: true,\n    }).subscribe((response: any) => {\n      if (response) {\n        this.submitted = false;\n        this.utility.updateLoader(false);\n        if (!this.utility.isEmptyOrNullOrUndefined(response[\"data\"]) && response.status[\"statusCode\"] == \"1\") {\n          this.passSuccessData = response[\"data\"]\n          this.successMsg = this.passSuccessData.busPassStatusMessageDetails\n          this.utility.presentAlert(response.status[\"statusMessage\"]).then((res) => {\n            this.isPassSubmitted = true;\n          });\n        }\n      }\n    }, (error) => {\n      this.utility.updateLoader(false);\n    });\n  }\n\n  /**\n   * Custom form validator for Bus pass.\n   * Checks if selected date is a weekend for daily pass.\n   * Also checks if daily pass type control is empty.\n   * Checks if daily pass is applied after 6.30pm.\n   * @param group all the bus pass form controls\n   */\n  formValidator(group: FormGroup): any {\n    if (group) {\n      let startDate = group.get(\"startDate\").value;\n      let dailyPassTypeVal = group.get(\"dailypassType\").value;\n      if (startDate) {\n        if (startDate == \"\") {\n          return { startDateIsempty: true };\n        } else {\n          let formatDate = moment(startDate).format(\"YYYY-MM-DD\");\n          const tempdate = moment(formatDate); // Thursday Feb 2015\n          const dow = tempdate.day()\n          if (dow == 0 || dow == 6) return { IsWeekend: true };\n        }\n      }\n      if (group.get(\"passType\").value != \"\") {\n        if (group.get(\"passType\").value == \"Daily\" && (dailyPassTypeVal == \"\" || dailyPassTypeVal == null)) {\n          return { dailypassIsEmpty: true };\n        }\n      }\n      if (group.get(\"passType\").value != \"\") {\n        if (group.get(\"passType\").value == \"Daily\" && (group.get(\"startDate\").value != '' || group.get(\"startDate\").value != null)) {\n          let time = moment().format('HH:mm');\n          let timeArray = time.split(':')\n          let startTime = group.get(\"startDate\").value\n          var today = moment();\n          if ((startTime != '' || startTime != null) && moment(startTime).isSame(today, 'day')) {\n            if (parseInt(timeArray[0]) >= 18) {\n              if (parseInt(timeArray[1]) >= 30) {\n                return { passNotAllowed: true };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Method checks whether form is valid or not;\n   * If form is invalid show appropriate error messages else calls submitPass/bookShuttle method\n   */\n  verifySubmitDetails() {\n    if (this.passForm.invalid && this.passReqType == \"bus\") {\n      this.submitted = true;\n      return;\n    } else if (this.shuttleForm.invalid && this.passReqType == \"shuttle\") {\n      this.submitted = true;\n      return;\n    }\n\n    if (!this.isSeatAvailable) {\n      this.utility.presentAlert(\"Seats not available\");\n      return;\n    } else {\n      this.utility.presentConfirmation(\"Do you want to add new pass?\").then((res) => {\n        if\n        (this.passReqType == \"bus\") this.submitPass();\n        else if\n        (this.passReqType == \"shuttle\") this.bookShuttle();\n      }, (err) => {\n\n      });\n    }\n  }\n\n  /**\n   * Method returns string value(available or not available) based on seat count.\n   * returns \"available\" if seat count is greater than 0.\n   * @param seatCount number of seats available for particular pickup point\n   */\n  checkSeatAvailability(seatCount) {\n    if (seatCount > 0) {\n      this.isSeatAvailable = true;\n      return \"Available\";\n    } else if (seatCount == 0) {\n      this.isSeatAvailable = false;\n      return \"Not Available\";\n    }\n  }\n\n  /**\n   * Method to make call \n   * @param number number for call\n   */\n  call(number) {\n    this.utility.callNumber(number);\n  }\n\n  /**\n   * Custom form validator for Shuttle pass.\n   * Checks if selected date is a weekend for daily pass.\n   * Also checks if daily pass type control is empty.\n   * @param group all the shuttle form controls\n   */\n  shuttleformValidator(group: FormGroup): any {\n    if (group) {\n      let startDate = group.get(\"startDate\").value\n      let dailyPassTypeVal = group.get(\"dailypassType\").value\n\n      if (startDate) {\n        if (startDate == \"\") {\n          return { startDateIsempty: true }\n        } else {\n          let formatDate = moment(startDate).format(\"YYYY-MM-DD\")\n          const tempdate = moment(formatDate) // Thursday Feb 2015\n          const dow = tempdate.day()\n          if (dow == 0 || dow == 6) return { IsWeekend: true }\n        }\n      }\n\n      if (group.get(\"passType\").value != \"\") {\n        if (group.get(\"passType\").value == \"Daily\" && (dailyPassTypeVal == \"\" || dailyPassTypeVal == null)) {\n          return { dailypassIsEmpty: true };\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Service call for applying pass for Shuttle\n   */\n  bookShuttle() {\n    this.utility.updateLoader(true);\n\n    this.httpProvider.http.commonService({\n      url: \"applyBusPass\",\n      data: {\n        startDate: this.shuttleForm.get(\"startDate\").value,\n        passType: this.shuttleForm.get(\"passType\").value,\n        routeName: this.shuttleForm.get(\"routeName\").value,\n        pickupPointName: this.shuttleForm.get(\"pickupPoint\").value,\n        isNonZensarian: this.isNonZensarian,\n        transportType: this.passReqType,\n        dailyPassType: this.shuttleForm.get(\"dailypassType\").value,\n      },\n      isZenAdmin: true,\n    }).subscribe((response: any) => {\n      if (response) {\n        this.submitted = false;\n        this.utility.updateLoader(false);\n        if (!this.utility.isEmptyOrNullOrUndefined(response[\"data\"]) && response.status[\"statusCode\"] == \"1\") {\n          this.passSuccessData = response[\"data\"];\n          this.successMsg = this.passSuccessData.busPassStatusMessageDetails;\n          this.utility.presentAlert(response.status[\"statusMessage\"]).then((res) => {\n            this.isPassSubmitted = true;\n          });\n        }\n      }\n    }, (error) => {\n      this.utility.updateLoader(false);\n    });\n  }\n\n  /**\n  * Opens modal for buss pass rules\n  *\n  */\n  openRulesModal() {\n    this.modalCtrl.create(BusRulesModalComponent, { dataParams: {}, }, { cssClass: \"\", }).present();\n  }\n\n  /**\n * Handles daily pass type change event\n @param passType  selected daily passtype\n */\n  onDailyTypeChange(passType) {\n    // Reset values if daily pass type is changed\n    if (this.passForm.get(\"routeName\").enabled && this.passForm.get(\"startDate\").enabled) {\n      this.passForm.get(\"pickupPoint\").reset()\n      this.passForm.get(\"arrivalTime\").reset()\n      this.passForm.get(\"routeName\").reset()\n      this.passForm.get(\"startDate\").reset()\n\n\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zen-admin/add-new-pass/add-new-pass.ts"],"sourceRoot":""}
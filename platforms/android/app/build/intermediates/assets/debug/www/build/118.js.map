{"version":3,"sources":["../../src/container/add/add.module.ts","../../src/container/add/add.ts"],"names":[],"mappings":"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","file":"118.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddPage } from './add';\nimport { ComponentsModule } from '../../components/components.module';\nimport { Attachment } from '../../providers/attachment/attachment';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    IonicPageModule.forChild(AddPage),\n  ],\n  declarations: [AddPage],\n  providers: [\n    Attachment,\n  ]\n})\nexport class AddPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/add/add.module.ts","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { LoadingController, NavController, PopoverController, AlertController, Loading, NavParams, Navbar } from 'ionic-angular';\nimport { Attachment } from '../../providers/attachment/attachment';\nimport { IonicPage } from 'ionic-angular';\nimport { Store } from \"@ngrx/store\";\nimport * as fromStore from '../../store';\nimport { File } from '@ionic-native/file';\nimport { Subscription } from 'rxjs/Subscription';\nimport { EmojiService } from 'angular-emojione';\nimport { Data } from '../../providers/data/data';\n\n@IonicPage()\n@Component({\n    selector: 'page-add',\n    templateUrl: 'add.html'\n})\nexport class AddPage implements OnInit\n{\n\n    private degreeStyle;\n    private addType;\n    private addText = '';\n    private addMessege = '';\n    private addmsgType;\n    private currentURL: string = null;\n    private imagesList: any = [];\n    private formData: FormData;\n    private loader: Loading;\n    private navType: string;\n    private questionId: string;\n    private role: string;\n    private answerType: string;\n    private title: string = '';\n    private btnTitle: string;\n    private maxLength: any = 0;\n    private maxImageCount: number = 4;\n    private errorMsg: any = false;\n    private userType: any;\n    private placeholderContent: string;\n    private emoji: any\n\n\n    @ViewChild('inputToFocus') inputToFocus;\n    @ViewChild(Navbar) navBar: Navbar;\n\n    private _addLoadingListener: Subscription = new Subscription();\n    private _addSuccessListener: Subscription = new Subscription();\n    private _roleListener: Subscription = new Subscription();\n\n\n    constructor(\n        private navCtrl: NavController,\n        private attachment: Attachment,\n        private store: Store<fromStore.AppState>,\n        private loadingController: LoadingController,\n        private popoverCtrl: PopoverController,\n        private alertCtrl: AlertController,\n        private file: File,\n        private navParams: NavParams,\n        private emojiService: EmojiService,\n        private data: Data)\n    {\n\n        // get logged in user data & check for user type (associate or admin)\n        this.data.getData('loginDetails').then((loginData: any) =>\n        {\n            if (loginData.details)\n            {\n                this.userType = loginData.details.userDetails.userType;\n            }\n        })\n\n    }\n    // on page load, all the data initialization takes place here\n    ngOnInit()\n    {\n        this.maxLength = 350;\n        this.degreeStyle = 'rotate(' + -45 + 'deg)';\n        this.formData = new FormData();\n        this.navType = this.navParams.get('type');\n        this.questionId = this.navParams.get('questionId');\n        this.answerType = this.navParams.get('answerType');\n        console.log(this.answerType);\n\n        if (this.answerType == 'reject')\n        {\n            // this.title = \"Discard\";\n        } else if (this.answerType == 'accept')\n        {\n            // this.title = \"Reply\";\n        } else\n        {\n            // this.title = \"Add\";\n        }\n\n        if (this.navType == 'addQuestion')\n        {\n            this.addType = 'Question';\n            this.placeholderContent = \"Type your question\";\n        } else if (this.navType == 'addAnswer')\n        {\n            if (this.answerType == 'reject')\n            {\n                this.addType = 'Question';\n                this.placeholderContent = \"Reason for discarding question\";\n            } else\n            {\n                this.addType = 'Answer';\n                this.placeholderContent = \"Type your answer\";\n            }\n        } else if (this.navType == \"addAnnouncement\")\n        {\n            this.addType = 'Announcement';\n\n        }\n\n        this.data.getData(this.addType).then((data: any) =>\n        {\n            this.addText = data;\n        })\n\n        this.data.getData(this.addmsgType).then((message: any) =>\n        {\n            this.addMessege = message;\n        })\n\n        this.title = this.title.concat(' ' + this.addType);\n    }\n\n    ionViewDidEnter()\n    {\n        // on entering set focus on input field\n        setTimeout(() =>\n        {\n            this.inputToFocus.setFocus();\n        });\n    }\n\n    //this will call every time by Ionic whenever we enter into the page, subscribing all the data here. \n    ionViewWillEnter()\n    {\n\n        this._addLoadingListener = this.store.select<any>(fromStore.getAddLoading).subscribe(loading =>\n        {\n            this.updateLoader(loading);\n        });\n\n        this._addSuccessListener = this.store.select<any>(fromStore.getAddData).subscribe(data =>\n        {\n            if (data)\n            {\n                this.store.dispatch(new fromStore.AddResetAction());\n                this.presentAlert();\n            }\n        });\n\n\n        this._roleListener = this.store.select<any>(fromStore.getRole).subscribe((res) =>\n        {\n            if (res)\n            {\n                this.role = res;\n            }\n        });\n\n        this.setBackButtonAction();\n    }\n\n    // this method save all the data as draft on back button click\n    setBackButtonAction()\n    {\n        this.navBar.backButtonClick = () =>\n        {\n            if (this.addText != undefined && this.addText != null && this.addText != '')\n            {\n                if (this.addText.length > 0)\n                {\n                    let alert = this.alertCtrl.create({\n                        message: 'Do you want to save as drafts?',\n                        enableBackdropDismiss: false,\n\n                        buttons: [\n                            {\n                                text: 'No',\n                                role: 'no',\n                                handler: () =>\n                                {\n                                    this.navCtrl.pop();\n                                    this.data.saveData(this.addType, '');\n                                    this.data.saveData(this.addmsgType, '');\n                                }\n                            },\n                            {\n                                text: 'Yes',\n                                handler: () =>\n                                {\n                                    this.navCtrl.pop();\n                                    this.data.saveData(this.addType, this.addText);\n                                    this.data.saveData(this.addmsgType, this.addMessege);\n                                }\n                            }\n                        ],\n\n                    });\n                    alert.present();\n                }\n                else\n                {\n                    this.navCtrl.pop();\n                }\n            }\n            else\n            {\n                this.navCtrl.pop();\n            }\n\n        }\n\n    }\n    // on leaving this page, all observable has be unsubscribed here..\n    ionViewWillLeave()\n    {\n        this._addLoadingListener.unsubscribe();\n        this._addSuccessListener.unsubscribe();\n        this._roleListener.unsubscribe();\n    }\n\n    // attach images from camera or gallery\n    attach(myEvent)\n    {\n        if (this.imagesList.length < this.maxImageCount)\n        {\n            let popover = this\n                .popoverCtrl\n                .create('PopoverPage', { 'type': 'attach' });\n            // enableBackdropDismiss: false;\n            popover.present({ ev: myEvent });\n            popover.onDidDismiss((type) =>\n            {\n\n                if (type == 'gallery')\n                {\n\n                    let count = this.maxImageCount - this.imagesList.length;\n                    this.attachment.openGallery(count).then((response) =>\n                    {\n\n                        if (response)\n                        {\n                            if (response != \"OK\")\n                            {\n                                this.imagesList = this.imagesList.concat(response);\n                            }\n                        }\n\n                    });\n\n                } else if (type == 'camera')\n                {\n\n                    this.attachment.openCamera().then((response) =>\n                    {\n                        if (response)\n                        {\n                            this.imagesList = this.imagesList.concat([response]);\n                        }\n                    });\n                }\n            })\n\n        } else\n        {\n            let alert = this.alertCtrl.create({\n                title: '',\n                message: `Cannot add more than ${this.maxImageCount} images`,\n                buttons: [\n                    {\n                        text: 'Ok',\n                        handler: () =>\n                        {\n                        }\n                    }\n                ],\n                cssClass: 'alertCustomCss'\n            });\n            alert.present();\n        }\n\n\n    }\n\n    // To remove attached image while adding question or announcement\n    removeAttach(id)\n    {\n        this.imagesList = this.imagesList.filter((item, i) =>\n        {\n            if (id != i)\n            {\n                return item;\n            }\n        })\n\n    }\n\n    // Removing un-necessary spacing from entered text \n    trim()\n    {\n        this.addText = this.addText.trim();\n\n        if (this.addText.length > 0)\n        {\n            this.errorMsg = false;\n        }\n        //  else {\n        //     this.errorMsg = true;\n        // }\n    }\n\n\n    // To post a question with the attachment\n    send()\n    {\n\n        this.addText = this.addText.trim();\n        this.formData = new FormData();\n\n\n\n        if (this.addText.length > 0)\n        {\n            this.errorMsg = false;\n        } else\n        {\n            this.errorMsg = true;\n\n        }\n\n        if (this.addText.length > 0)\n        {\n            this.errorMsg = false;\n            const textsend = this.emojiService.unicodeToShortname(this.addText);\n\n            let message: string = null;\n            if (this.navType == 'addQuestion')\n            {\n                message = 'Do you want to submit ?';\n                this.currentURL = 'addQuestion';\n                this.formData.append('question', textsend);\n            } else if (this.navType == 'addAnswer')\n            {\n                this.currentURL = 'addAnswer';\n                this.formData.append('questionId', this.questionId);\n                this.formData.append('answer', textsend);\n                this.formData.append('answerType', this.answerType);\n                this.formData.append('role', this.role);\n\n                if (this.answerType == 'reject')\n                {\n                    // this.btnTitle = \"Discard\";\n                    message = 'Do you really want to discard this question?';\n                } else if (this.answerType == 'accept')\n                {\n                    // this.btnTitle = \"Reply\";\n                    message = 'Do you want to reply ?';\n                }\n            } else if (this.navType == \"addAnnouncement\")\n            {\n                if (this.addMessege.length > 0)\n                {\n                    const textAnnouncement = this.emojiService.unicodeToShortname(this.addMessege);\n                    message = 'Do you want to submit ?';\n                    this.currentURL = 'addAnnouncements';\n                    this.formData.append('announcementSubject', textsend);\n                    this.formData.append('announcementText', textAnnouncement);\n                }\n\n            }\n\n            let alert = this.alertCtrl.create({\n                enableBackdropDismiss: false,\n                title: this.btnTitle,\n\n                message: message,\n                buttons: [\n                    {\n                        text: 'No',\n                        role: 'no',\n                        handler: () =>\n                        {\n                        }\n                    },\n                    {\n                        text: 'Yes',\n                        handler: () =>\n                        {\n\n                            if (this.imagesList.length > 0)\n                            {\n\n                                Promise.all(\n                                    this.imagesList.map(element =>\n                                    {\n\n                                        return new Promise((resolve, reject) =>\n                                        {\n\n                                            this.file.resolveLocalFilesystemUrl(element).then((entry: any) =>\n                                            {\n                                                entry.file((file) =>\n                                                {\n                                                    const fileReader = new FileReader();\n                                                    fileReader.readAsArrayBuffer(file);\n                                                    fileReader.onload = ev =>\n                                                    {\n\n                                                        let imgBlob = new Blob([fileReader.result], { type: file.type });\n                                                        this.formData.append('file', imgBlob, file.name);\n                                                        resolve(element);\n\n                                                    }\n\n                                                })\n                                            })\n\n\n                                        })\n\n                                    })\n                                ).then(() =>\n                                {\n                                    this.store.dispatch(new fromStore.AddMultimediaAction(this.currentURL, this.formData, this.navType));\n                                }).catch(\n                                    function ()\n                                    {\n                                    }\n                                );\n\n                            } else\n                            {\n                                this.store.dispatch(new fromStore.AddMultimediaAction(this.currentURL, this.formData, this.navType));\n                                this.data.saveData(this.addType, \"\");\n                                this.data.saveData(this.addmsgType, \"\");\n                            }\n                        }\n                    }\n                ],\n                cssClass: 'alertCustomCss'\n            });\n            alert.present();\n        }\n        else\n        {\n            this.errorMsg = true;\n        }\n\n    }\n\n\n    // create, show and hide loader \n    updateLoader(loading)\n    {\n\n        if (loading)\n        {\n            this.loader = this.loadingController.create();\n            this.loader.present()\n        } else\n        {\n            if (this.loader)\n            {\n                this.loader.dismiss();\n                this.loader = null;\n            }\n        }\n\n    }\n\n    // Show success, faliure of service call messages...\n    presentAlert()\n    {\n\n        let subTitle: any;\n        if (this.answerType == 'reject')\n        {\n            subTitle = \"Question discarded successfully\";\n        } else if (this.answerType == 'accept')\n        {\n            subTitle = \"You have successfully responded to the query.\"\n        } else\n        {\n            subTitle = \"Your query has been successfully posted. Please expect a response within 48 hours.\";\n        }\n\n        let alert = this.alertCtrl.create({\n            // title: 'Confirmation',\n            enableBackdropDismiss: false,\n            // title: 'Confirmation',\n            subTitle: subTitle,\n\n            buttons: [\n                {\n                    text: 'OK',\n                    handler: () =>\n                    {\n\n                        if (this.navType == 'addQuestion' || this.navType == \"addAnnouncement\")\n                        {\n                            if (this.userType == \"PRE-ONBOARDING\")\n                            {\n                                let lastIndex = this.navCtrl.getActive().index - 1;\n                                let lastPageName = this.navCtrl.getByIndex(lastIndex).name;\n\n                                if (lastPageName == \"ObDashboardPage\")\n                                {\n                                    this.navCtrl.push('QuestionsPage')\n                                    let currentIndex = this.navCtrl.getActive().index;\n                                    this.navCtrl.remove(currentIndex, 1);\n                                } else\n                                {\n                                    this.navCtrl.push('QuestionsPage')\n                                    let currentIndex = this.navCtrl.getActive().index - 1;\n                                    this.navCtrl.remove(currentIndex, 2);\n                                }\n\n\n                            } else\n                            {\n                                this.navCtrl.pop();\n                            }\n\n                        } else if (this.navType == 'addAnswer')\n                        {\n\n                            let currentIndex = this.navCtrl.getActive().index - 1;\n                            this.navCtrl.remove(currentIndex, 2);\n                        }\n\n                    }\n                }\n            ]\n        });\n        alert.present();\n\n    }\n\n\n    //Show popup menu\n    presentOptions(myEvent)\n    {\n        let popover = this.popoverCtrl.create('PopoverPage', { 'type': 'obAdd' });\n        popover.present({ ev: myEvent });\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/container/add/add.ts"],"sourceRoot":""}
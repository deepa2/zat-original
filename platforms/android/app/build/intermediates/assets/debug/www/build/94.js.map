{"version":3,"sources":["../../src/container/on-bording-change-password/on-bording-change-password.module.ts","../../src/container/on-bording-change-password/on-bording-change-password.ts"],"names":[],"mappings":"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","file":"94.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { OnBordingChangePasswordPage } from './on-bording-change-password';\n\n@NgModule({\n  declarations: [\n    OnBordingChangePasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(OnBordingChangePasswordPage),\n  ],\n})\nexport class OnBordingChangePasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/on-bording-change-password/on-bording-change-password.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, PopoverController } from 'ionic-angular';\nimport { LoadingController, AlertController, Loading } from 'ionic-angular';\nimport { Store } from \"@ngrx/store\";\nimport * as fromStore from '../../store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { HttpProvider } from '../../providers/http/http';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-on-bording-change-password',\n  templateUrl: 'on-bording-change-password.html',\n})\nexport class OnBordingChangePasswordPage {\n\n  private viewPassword = false;\n  type = 'password';\n  private oldPassword: string;\n  private newPassword: string;\n  private verifyPassword: string;\n  private passData: any = {};\n  loader: Loading;\n\n  private _changePasswordLoading: Subscription = new Subscription();\n  private _changePasswordData: Subscription = new Subscription();\n\n  constructor(private navCtrl: NavController, private navParams: NavParams,\n    private loading: LoadingController,\n    private loadingController: LoadingController,\n    private popoverCtrl: PopoverController,\n    private http: HttpProvider,\n    private alertCtrl: AlertController, private store: Store<fromStore.AppState>) {\n  }\n\n\n  ionViewWillEnter() {\n    // this._changePasswordLoading = this.store.select<any>(fromStore.getOnboardingChangePasswordLoading).subscribe(loading => {\n    //   this.updateLoader(loading);\n    // })\n  }\n\n\n  updatePass() {\n    this.viewPassword = !this.viewPassword\n    if (this.viewPassword) {\n      this.type = 'text';\n    } else {\n      this.type = 'password';\n    }\n  }\n\n  changePassword() {\n    if ((this.newPassword != undefined && this.verifyPassword != undefined && this.oldPassword != undefined) && (this.newPassword != \"\" && this.verifyPassword != \"\" && this.oldPassword != \"\")) {\n      if (this.newPassword === this.verifyPassword) {\n        this.passData = {\n          oldPssword: this.oldPassword,\n          newPassword: this.newPassword\n        }\n        this.updateLoader(true)\n        // this.store.dispatch(new fromStore.OBChangePassword(this.passData))\n\n        // return new Promise(resolve => {\n        //   this._changePasswordData = this.store.select<any>(fromStore.getOBchangePasswordData).subscribe((response) => {\n        //     this.store.dispatch(new fromStore.OBChangePasswordReset())\n        //     if (response) {\n\n        //       if (response.status.statusCode < 0) {\n        //         this.errorAlert(response.status.statusMessage);\n        //       } else if (response.status.statusCode == 1) {\n        //         this.presentAlert();\n        //       }\n        //       resolve();\n        //     }\n\n        //   }, err => {\n        //   })\n        // })\n\n        this.http.http.OBChangePassword(this.passData).subscribe((response: any) => {\n         \n          if (response) {\n            this.updateLoader(false)\n            if (response.status.statusCode < 0) {\n              this.errorAlert(response.status.statusMessage);\n            } else if (response.status.statusCode == 1) {\n              this.presentAlert();\n            }\n\n          }\n        },error=>{\n          this.updateLoader(false);\n        })\n\n      } else {\n\n        this.errorAlert(\"New password and verify password should be same.\");\n      }\n    } else if ((this.newPassword == undefined || this.verifyPassword == undefined || this.oldPassword == undefined) || (this.newPassword == \"\" || this.verifyPassword == \"\" || this.oldPassword == \"\")) {\n      this.errorAlert(\"Please fill all the fields.\");\n    }\n  }\n\n  updateLoader(loading) {\n\n    if (loading) {\n      this.loader = this.loadingController.create();\n      this.loader.present()\n    } else {\n      if (this.loader) {\n        this.loader.dismiss();\n        this.loader = null;\n      }\n    }\n\n  }\n\n  presentAlert() {\n    let alert = this.alertCtrl.create({\n      // title: 'Confirmation',\n      enableBackdropDismiss: false,\n      subTitle: 'Password Changed successfully.',\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => {\n            this.navCtrl.setRoot('LoginPage');\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  errorAlert(message) {\n    let alert = this.alertCtrl.create({\n      title: 'Error',\n      subTitle: message,\n      buttons: ['Ok']\n    });\n    alert.present();\n  }\n\n  presentOptions(myEvent) {\n    let popover = this.popoverCtrl.create('PopoverPage', { 'type': 'obChangePassword' });\n    popover.present({ ev: myEvent });\n  }\n\n  ionViewWillLeave() {\n    this._changePasswordData.unsubscribe();\n    this._changePasswordLoading.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/on-bording-change-password/on-bording-change-password.ts"],"sourceRoot":""}
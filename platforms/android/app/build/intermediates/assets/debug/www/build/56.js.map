{"version":3,"sources":["../../src/container/zencontacts/zencontacts.module.ts","../../src/container/zencontacts/zencontacts.ts"],"names":[],"mappings":"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","file":"56.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ZencontactsPage } from './zencontacts';\n\n@NgModule({\n  declarations: [\n    ZencontactsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ZencontactsPage),\n  ],\n})\nexport class ZencontactsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zencontacts/zencontacts.module.ts","import { Component, Input, OnInit } from '@angular/core';\nimport { IonicPage, NavController, NavParams, PopoverController } from 'ionic-angular';\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport * as fromStore from \"@app/store\";\nimport { FormControl, Validators } from '@angular/forms';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-zencontacts',\n  templateUrl: 'zencontacts.html',\n})\nexport class ZencontactsPage implements OnInit {\n\n  @Input() user: any;\n  private _zenContacts: Subscription = new Subscription();\n  searchQuery: string[];\n  items: any[];\n  private searchInput = '';\n  url: string = \"getEmployeeContactList\";\n  appName: string = \"\";\n  versionNumber: any = \"\";\n  releaseNumber: string = \"\";\n  pageType: string;\n  loading$: Observable<any>;\n  itemsLength: any;\n  searchedData: any;\n  startList: number = 0;\n  endList: number = 15;\n  searchControl: FormControl;\n  infiniteScroll: any;\n  totalResultCount: number\n  resultPending: boolean = false;\n  noResult: string = \"No results found\";\n  refresher: any = '';\n  pageTitle: any = '';\n  params: any = {\n    \"startList\": this.startList,\n    \"endList\": this.endList\n  }\n\n  constructor(private navCtrl: NavController, private navParams: NavParams,\n    private popoverCtrl: PopoverController, private store: Store<fromStore.AppState>, ) {\n    this.searchControl = new FormControl('', Validators.required);\n    this.pageTitle = this.navParams.get('pageTitle')\n\n  }\n\n  ngOnInit() {\n  }\n\n\n  ionViewDidLoad() {\n    this.store.dispatch(new fromStore.GetZenContactsResetAction());\n    this.loading$ = this.store.select<any>(fromStore.getZenContactsLoading);\n    this.getData();\n\n    this.searchControl.valueChanges.debounceTime(1000).subscribe(search => {\n      this.store.dispatch(new fromStore.GetZenContactsResetAction());\n      this.startList = 0;\n      this.endList = 15;\n      this.getData()\n    });\n  }\n\n  ionViewWillLeave() {\n    this._zenContacts.unsubscribe();\n  }\n\n  getItems(ev: any) {\n    const val = ev.target.value;\n    if (val && val.trim() !== '') {\n      // this.getData();\n      return this.searchedData\n    }\n  }\n\n  presentOptions(myEvent) {\n\n    let popover = this\n      .popoverCtrl\n      .create('PopoverPage', { 'type': 'others' });\n\n    popover.present({ ev: myEvent });\n  }\n\n  getData() {\n\n    let params = {\n      \"start\": this.startList,\n      \"end\": this.endList,\n      \"search\": this.searchInput\n    };\n\n    this.store.dispatch(new fromStore.GetZenContactsAction(this.url, params));\n    this.resultPending = true;\n    return new Promise(resolve => {\n      this._zenContacts = this.store\n        .select<any>(fromStore.getZenContactsState)\n        .subscribe(\n          response => {\n            if (!response.pending && response.data) {\n              this.resultPending = false;\n              this.searchedData = response.data;\n              this.totalResultCount = this.searchedData.length;\n\n              if (!response.pending && this.infiniteScroll) {\n                this.infiniteScroll.complete();\n              }\n\n              if (!response.pending && this.refresher) {\n                this.refresher.complete();\n              }\n              resolve();\n            }\n          },\n          err => {\n          }\n        );\n    });\n\n  }\n\n\n  doInfinite(infiniteScroll) {\n\n    if (!this.resultPending) {\n      this.startList = this.endList;\n      this.endList = this.startList + 15;\n      this.getData().then(() => {\n        infiniteScroll.complete();\n      });\n    }\n\n  }\n\n  /* doRefresh(refresher) {\n\n    this.refresher = refresher;\n\n    this.startList = 0;\n    this.endList = 15;\n\n    this.params = {\n      \"start\": this.startList,\n      \"end\": this.endList\n    };\n\n    //  this.searchControl.valueChanges.debounceTime(1000).subscribe(search => {\n    this.store.dispatch(new fromStore.GetZenContactsResetAction());\n    // this.startList = 0;\n    // this.endList = 10;\n    // this.getData()\n    // this.selectedIndex();\n    // });\n\n    // this.store.dispatch(new fromStore.GetInternalJobPostingAction(this.internalJobPostingurl, this.params));\n  \n  } */\n\n\n  /**\n   * Method which redirect to New profile page.\n   * sending userId and profileType to the next view.\n   * @param event\n   * @param employeeId \n   */\n  goToProfile(event, employeeId: any) {\n    // event.stopPropagation();\n    this.navCtrl.push('NewProfilePage', {\n      'userId': parseInt(employeeId),\n      'profileType': 'zencontacts'\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/container/zencontacts/zencontacts.ts"],"sourceRoot":""}
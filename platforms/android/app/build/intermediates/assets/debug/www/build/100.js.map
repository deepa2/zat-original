{"version":3,"sources":["../../src/container/login/login.module.ts","../../src/container/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AACS;AACI;AACD;AAEN;AACI;AACe;AAgB7D;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAb3B,+DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,yDAAS,CAAC;YACzB,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,mEAAW;gBACX,gEAAW,CAAC,UAAU,CAAC,KAAK,EAAE,0DAAQ,EAAC,EAAC,YAAY,kEAAC,CAAC;gBACtD,4DAAa,CAAC,UAAU,CAAC,yDAAO,CAAC;aAClC;YACD,SAAS,EAAC;gBACR,kEAAI;gBACJ,sEAAO;aACR;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBc;AAC0B;AACU;AAC7B;AACb;AACK;AACQ;AACiB;AACvB;AACuC;AAET;AAChB;AAQzD;IASI,8BAA8B;IAE9B,mBAAoB,OAAsB,EAC9B,KAA6B,EAC7B,IAAU,EACV,WAAwB,EACxB,OAA0B,EAC1B,iBAAoC,EACpC,GAAe,EACf,OAAwB,EACxB,MAAc,EACd,GAAQ,EACR,MAAoB,EACpB,YAA0B;QAXlB,YAAO,GAAP,OAAO,CAAe;QAC9B,UAAK,GAAL,KAAK,CAAwB;QAC7B,SAAI,GAAJ,IAAI,CAAM;QACV,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAmB;QAC1B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,QAAG,GAAH,GAAG,CAAY;QACf,YAAO,GAAP,OAAO,CAAiB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAK;QACR,WAAM,GAAN,MAAM,CAAc;QACpB,iBAAY,GAAZ,YAAY,CAAc;QAnB9B,mBAAc,GAAiB,IAAI,+DAAY,EAAE,CAAC;QAClD,SAAI,GAAG,UAAU,CAAC;QAClB,aAAQ,GAAG,KAAK,CAAC;QAEjB,eAAU,GAAY,IAAI,CAAC;QAiB/B,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,MAAM,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;QAEpE,6BAA6B,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC;QACD,MAAM,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;QACpE,6BAA6B,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IAED,uFAAuF;IACjF,yBAAK,GAAX;;;;;;;wBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;wBAEhB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gCAChD,OAAO,EAAE,SAAS;6BACrB,CAAC;;wBAFI,OAAO,GAAG,SAEd;wBAEF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBAExB,wEAAwE;wBAExE,4BAA4B;wBAE5B,0BAA0B;wBAC1B,qCAAqC;wBACrC,mDAAmD;wBACnD,2EAA2E;wBAC3E,qCAAqC;wBACrC,2DAA2D;wBAC3D,gDAAgD;wBAChD,8DAA8D;wBAC9D,6DAA6D;wBAC7D,sFAAsF;wBACtF,qFAAqF;wBACrF,4FAA4F;wBAG5F,0DAA0D;wBAC1D,6CAA6C;wBAC7C,iEAAiE;wBACjE,sEAAsE;wBACtE,6DAA6D;wBAE7D,2BAA2B;wBAC3B,gGAAgG;wBAEhG,iFAAiF;wBAEjF,mFAAmF;wBACnF,4BAA4B;wBAC5B,6HAA6H;wBAC7H,qEAAqE;wBACrE,4BAA4B;wBAC5B,gIAAgI;wBAChI,yEAAyE;wBACzE,qEAAqE;wBACrE,4BAA4B;wBAC5B,wGAAwG;wBACxG,8DAA8D;wBAC9D,iDAAiD;wBACjD,+DAA+D;wBAC/D,wBAAwB;wBACxB,oBAAoB;wBACpB,4CAA4C;wBAC5C,qCAAqC;wBACrC,uBAAuB;wBACvB,qCAAqC;wBACrC,qDAAqD;wBACrD,gBAAgB;wBAChB,mBAAmB;wBACnB,iCAAiC;wBACjC,iDAAiD;wBACjD,YAAY;wBACZ,oBAAoB;wBACpB,cAAc;wBACd,6CAA6C;wBAC7C,6BAA6B;wBAC7B,UAAU;wBAGV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;4BAC7E,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;4BAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;4BAEtB,IAAI,QAAQ,CAAC,OAAO,EAAE;gCAClB,IAAI,MAAM,GAAG,QAAQ,CAAC;gCACtB,IAAI,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE;oCAC/B,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mEAA4B,EAAE,CAAC,CAAC;oCACxD,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;oCAClB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;oCACxC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;oCAC7B,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;oCAC3C,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;oCAC1C,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC;oCACnE,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;oCAClE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC;oCAGzE,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;wCAClC,sBAAsB;wCACtB,0CAA0C;wCAC1C,KAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC;wCAC/C,sCAAsC;qCAEzC;yCAAM;wCACH,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,IAAI,iEAAS,CAAC,gBAAgB,CAAC,EAAE;4CAEpE,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE;gDAEjD,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;6CACvD;4CACD,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,EAAE;gDAC7F,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;6CACzC;4CACD,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE;gDAChG,0CAA0C;gDAC1C,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;6CACzC;yCACJ;6CAAM,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,IAAI,iEAAS,CAAC,iBAAiB,CAAC,EAAE;4CAC5E,mCAAmC;4CACnC,sBAAsB;4CACtB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;yCACvC;6CACI,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,IAAI,iEAAS,CAAC,UAAU,CAAC,EAAE;4CACnE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;yCAC1D;qCACJ;oCACD,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;oCACzB,OAAO,CAAC,OAAO,EAAE,CAAC;iCACrB;6BACJ;wBACL,CAAC,EACG,UAAC,KAAK;4BACF,OAAO,CAAC,OAAO,EAAE,CAAC;wBAEtB,CAAC,CACJ;;;;;KACJ;IAED,6BAA6B;IAC7B,kCAAc,GAAd;QACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACtB;aAAM;YACH,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;SAC1B;IACL,CAAC;IAED,8DAA8D;IAC9D,oCAAgB,GAAhB;QACI,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;IAED,8CAA8C;IAC9C,yCAAqB,GAArB;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;QACvC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;QACrC,IAAI,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,MAAM,CAAC,EAAE;YAClG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,yCAAyC,CAAC;YACjE,OAAM;SACT;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,QAAQ,CAAC,EAAE;YACxD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,4BAA4B,CAAC;YACpD,OAAM;SACT;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,2BAA2B,CAAC;YACnD,OAAM;SACT;aAAM;YACH,IAAI,CAAC,KAAK,EAAE;SACf;IAEL,CAAC;IAED,gCAAY,GAAZ,UAAa,KAAK;QACd,+BAA+B;QAC/B,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,EAAE;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;IACL,CAAC;IAnNQ,SAAS;QALrB,gEAAS,CAAC;YACP,QAAQ,EAAE,YAAY;WACG;SAC5B,CAAC;uEAa4C;YACvB,mEAAK;YACN,mEAAI;YACG,wEAAW;YACf,wEAAiB;YACP,oFAAiB;YAC/B,mGAAU;YACN,8DAAe;YAChB,2DAAM;YACT,2FAAG;YACA,2EAAY;YACN,MAAY;OAtB7B,SAAS,CAkOrB;IAAD,CAAC;AAAA;SAlOY,SAAS,e","file":"100.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\nimport { FormsModule } from '@angular/forms';\nimport { Data } from '../../providers/data/data';\nimport { Dialogs } from '@ionic-native/dialogs';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers, effects ,metaReducers} from '../../store';\n\n\n@NgModule({\n  declarations: [LoginPage],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    FormsModule,\n    StoreModule.forFeature('app', reducers,{metaReducers}),\n    EffectsModule.forFeature(effects),\n  ],\n  providers:[\n    Data,\n    Dialogs\n  ]\n})\nexport class LoginPageModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/container/login/login.module.ts","import { Component } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { IonicPage, NavController, LoadingController, Events, App } from 'ionic-angular';\nimport { Data } from '../../providers/data/data';\nimport { Store } from \"@ngrx/store\";\nimport * as fromStore from '../../store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { FCMUtility } from '../../providers/pushNotification/fcm';\nimport { Constants } from '@app/constants';\nimport { CommonUtilities } from '../../providers/commonUtilities/commonUtilities';\n\nimport { GetterSetter } from '../../providers/getterSetter/getterSetter';\nimport { HttpProvider } from '../../providers/http/http';\n\n@IonicPage()\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.html'\n})\n\nexport class LoginPage {\n    //  private password_type: string = 'password';\n    private user: FormGroup;\n    private _loginListener: Subscription = new Subscription();\n    private type = 'password';\n    private showPass = false;\n    private versionNo: string;\n    private showfooter: boolean = true;\n    private userData: any;\n    // private showNewUser = false\n\n    constructor(private navCtrl: NavController,\n        private store: Store<fromStore.Login>,\n        private data: Data,\n        private formBuilder: FormBuilder,\n        private loading: LoadingController,\n        private loadingController: LoadingController,\n        private fcm: FCMUtility,\n        private utility: CommonUtilities,\n        private events: Events,\n        private app: App,\n        private getSet: GetterSetter,\n        private httpProvider: HttpProvider) {\n\n        let self = this;\n        window.addEventListener('native.keyboardshow', keyboardShowHandler);\n\n        function keyboardShowHandler(e) {\n            self.showfooter = false;\n        }\n        window.addEventListener('native.keyboardhide', keyboardHideHandler);\n        function keyboardHideHandler(e) {\n            self.showfooter = true;\n        }\n        this.versionNo = this.getSet.getVersionNo();\n        this.user = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    // this function checks user credentials, user type and redirects to a particular page.\n    async login() {\n        this.userData = this.user.value;\n        //this.store.dispatch(new fromStore.Login(this.user.value));\n        const loading = await this.loadingController.create({\n            content: 'Loading'\n        });\n\n        await loading.present();\n\n        // this._loginListener = this.store.select<any>(fromStore.getLoginState)\n\n        //     .subscribe((res) => {\n\n        //         if (res.data) {\n        //             let result = res.data;\n        //             if (result.details.encryptedToken) {\n        //                 this.store.dispatch(new fromStore.OverallSearchClear());\n        //                 this.user.reset();\n        //                 this.data.saveData('loginStatus', true);\n        //                 this.events.publish('loginS')\n        //                 this.data.saveData('loginDetails', result);\n        //                 this.data.saveData('access-allowed', \"N\");\n        //                 this.data.saveData('encryptedToken', result.details.encryptedToken)\n        //                 this.data.saveData('switchUser', result.details.role.isSwitchUser)\n        //                 this.events.publish('loginUserType', result.details.userDetails.userType)\n\n\n        //                 if (result.details.role.isSwitchUser) {\n        //                     // this.zenwenLogin();\n        //                     // this.navCtrl.setRoot('SwitchUserPage');\n        //                     this.app.getRootNav().setRoot('SwitchUserPage')\n        //                     //this.navCtrl.setRoot('NewHomePage');\n\n        //                 } else {\n        //                     if (result.details.userDetails.userType == Constants[\"PRE-ONBOARDING\"]) {\n\n        //                         if (!(result.details.userDetails.isPasswordChanged)) {\n\n        //                             this.navCtrl.setRoot('OnBordingChangePasswordPage');\n        //                         }\n        //                         if (result.details.userDetails.isPasswordChanged && result.details.userDetails.isFirstTimeLogin) {\n        //                             this.navCtrl.setRoot('ObLandingPage');\n        //                         }\n        //                         if (result.details.userDetails.isPasswordChanged && !(result.details.userDetails.isFirstTimeLogin)) {\n        //                             //this.navCtrl.setRoot('ObDashboardPage');\n        //                             this.navCtrl.setRoot('ObLandingPage');\n        //                         }\n        //                     } else if (result.details.userDetails.userType == Constants[\"POST-ONBOARDING\"]) {\n        //                         //this.navCtrl.setRoot('HomePage');\n        //                         // this.zenwenLogin();\n        //                         this.navCtrl.setRoot('NewHomePage');\n        //                     }\n        //                 }\n        //                 this.fcm.registerToken();\n        //                 loading.dismiss();\n        //             } else {\n        //                 loading.dismiss();\n        //                 this._loginListener.unsubscribe();\n        //             }\n        //         } else {\n        //             loading.dismiss();\n        //             this._loginListener.unsubscribe();\n        //         }\n        //     }, (err) => {\n        //         //;\n        //         this._loginListener.unsubscribe();\n        //         loading.dismiss();\n        //     });\n\n\n        this.httpProvider.http.authenticate(this.user.value, \"login\").subscribe((response) => {\n            loading.dismiss();\n            this.user.reset();\n            console.log(response);\n\n            if (response.details) {\n                let result = response;\n                if (result.details.encryptedToken) {\n                    this.store.dispatch(new fromStore.OverallSearchClear());\n                    this.user.reset();\n                    this.data.saveData('loginStatus', true);\n                    this.events.publish('loginS')\n                    this.data.saveData('loginDetails', result);\n                    this.data.saveData('access-allowed', \"N\");\n                    this.data.saveData('encryptedToken', result.details.encryptedToken)\n                    this.data.saveData('switchUser', result.details.role.isSwitchUser)\n                    this.events.publish('loginUserType', result.details.userDetails.userType)\n\n\n                    if (result.details.role.isSwitchUser) {\n                        // this.zenwenLogin();\n                        // this.navCtrl.setRoot('SwitchUserPage');\n                        this.app.getRootNav().setRoot('SwitchUserPage')\n                        //this.navCtrl.setRoot('NewHomePage');\n\n                    } else {\n                        if (result.details.userDetails.userType == Constants[\"PRE-ONBOARDING\"]) {\n\n                            if (!(result.details.userDetails.isPasswordChanged)) {\n\n                                this.navCtrl.setRoot('OnBordingChangePasswordPage');\n                            }\n                            if (result.details.userDetails.isPasswordChanged && result.details.userDetails.isFirstTimeLogin) {\n                                this.navCtrl.setRoot('ObLandingPage');\n                            }\n                            if (result.details.userDetails.isPasswordChanged && !(result.details.userDetails.isFirstTimeLogin)) {\n                                //this.navCtrl.setRoot('ObDashboardPage');\n                                this.navCtrl.setRoot('ObLandingPage');\n                            }\n                        } else if (result.details.userDetails.userType == Constants[\"POST-ONBOARDING\"]) {\n                            //this.navCtrl.setRoot('HomePage');\n                            // this.zenwenLogin();\n                            this.navCtrl.setRoot('NewHomePage');\n                        }\n                        else if (result.details.userDetails.userType == Constants[\"SECURITY\"]) {\n                            this.navCtrl.setRoot('SecurityPersonnelBuseslistPage');\n                        }\n                    }\n                    this.fcm.registerToken();\n                    loading.dismiss();\n                }\n            }\n        },\n            (error) => {\n                loading.dismiss();\n\n            }\n        )\n    }\n\n    //show and hide user password\n    togglePassword() {\n        this.showPass = !this.showPass;\n        if (this.showPass) {\n            this.type = 'text';\n        } else {\n            this.type = 'password';\n        }\n    }\n\n    // on leaving the page, will unsubscribe all the subscriptions\n    ionViewWillLeave() {\n        this._loginListener.unsubscribe();\n    }\n\n    //checks the input fields for user credentials\n    checkLoginCredentials() {\n        let username = this.user.value.username\n        let passwd = this.user.value.password\n        if (this.utility.isEmptyOrNullOrUndefined(username) && this.utility.isEmptyOrNullOrUndefined(passwd)) {\n            this.utility.showToast('User Name and Password can not be empty')\n            return\n        } else if (this.utility.isEmptyOrNullOrUndefined(username)) {\n            this.utility.showToast('User Name can not be empty')\n            return\n        } else if (this.utility.isEmptyOrNullOrUndefined(passwd)) {\n            this.utility.showToast('Password can not be empty')\n            return\n        } else {\n            this.login()\n        }\n\n    }\n\n    eventHandler(event) {\n        ////console.log(event.keyCode);\n        if (event.keyCode == 13) {\n            event.preventDefault();\n        }\n    }\n\n    // zenwenLogin() {\n    //     let url = \"/zenWenLogin/authenticate\";\n    //     let user = this.userData;\n    //     //console.log(user)\n    //     this.httpProvider.http.ZenWENauthService(url, user).subscribe((res) => {\n    //         if (res && res.accessToken) {\n    //             this.data.saveData('zenwenLoginDetails', res);\n    //         }\n    //     }, (err) => {\n    //         //console.log('err: ', err);\n    //         this.data.saveData('zenwenLoginDetails', null);\n    //     })\n    // }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/container/login/login.ts"],"sourceRoot":""}